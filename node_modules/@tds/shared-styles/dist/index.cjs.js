'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var coreColours = require('@tds/core-colours');
var sharedTypography = require('@tds/shared-typography');
var coreResponsive = require('@tds/core-responsive');

var thin = {
  borderWidth: 1,
  borderStyle: 'solid'
};
var none = {
  borderWidth: '0'
};
var rounded = {
  borderRadius: '4px'
};
var circular = {
  borderRadius: '50%'
};

var borders = /*#__PURE__*/Object.freeze({
  thin: thin,
  none: none,
  rounded: rounded,
  circular: circular
});

/* eslint-disable import/prefer-default-export */
var fixLineHeight = {
  lineHeight: 1
};

var iconWrapper = /*#__PURE__*/Object.freeze({
  fixLineHeight: fixLineHeight
});

/* eslint-disable import/prefer-default-export */

/*
By default, browsers outline links in their own way. (Chrome/Safari do a light blue outline, Firefox/IE do a dotted line, etc)
Firefox also uses the text color for the outline, causing it to be invisible for primary and secondary ButtonLinks.

So, reset the outlines to fix Firefox and use browser defaults.

Solution from here: https://stackoverflow.com/questions/7538771/what-is-webkit-focus-ring-color
*/
var focusOutline = {
  ':focus': {
    // outline: 'dotted 1px Highlight', // TOOD: cannot have duplicate keys with style-objects.
    outline: 'auto 5px -webkit-focus-ring-color'
  }
};

var links = /*#__PURE__*/Object.freeze({
  focusOutline: focusOutline
});

var standard = {
  backgroundColor: coreColours.colorGreyAthens
};
var success = {
  backgroundColor: coreColours.colorPanache
};
var error = {
  backgroundColor: coreColours.colorLavenderBlush
};
var warning = {
  backgroundColor: coreColours.colorRajahLight
};
var errorText = {
  color: coreColours.colorCardinal
};
var disabledText = {
  color: coreColours.colorGreyGainsboro
};

var messaging = /*#__PURE__*/Object.freeze({
  standard: standard,
  success: success,
  error: error,
  warning: warning,
  errorText: errorText,
  disabledText: disabledText
});

var relative = {
  position: 'relative'
};
var absolute = {
  position: 'absolute'
};
var centerVertically = {
  top: '50%',
  transform: 'translateY(-50%)'
};

var position = /*#__PURE__*/Object.freeze({
  relative: relative,
  absolute: absolute,
  centerVertically: centerVertically
});

/* eslint-disable import/prefer-default-export */
var noSpacing = {
  padding: 0,
  margin: 0
};

var spacing = /*#__PURE__*/Object.freeze({
  noSpacing: noSpacing
});

function createCommonjsModule(fn, module) {
	return module = { exports: {} }, fn(module, module.exports), module.exports;
}

var _extends_1 = createCommonjsModule(function (module) {
function _extends() {
  module.exports = _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

module.exports = _extends;
});

var inputHeight = {
  height: '3rem' // 48px

};
var font = {
  fontFamily: sharedTypography.fontTelus
};
var baseButton = _extends_1({
  margin: 0,
  padding: '0 2rem',
  cursor: 'pointer',
  background: 'none',
  transition: 'background 0.2s',
  display: 'flex',
  width: '100%',
  alignItems: 'center',
  justifyContent: 'center',
  textAlign: 'center',
  minHeight: '3.25rem'
}, coreResponsive.media.from('md').css({
  display: 'inline-flex',
  width: 'auto',
  minWidth: '180px'
}), {
  // this is to fix the IE 11 bug to center text. For more info: https://github.com/philipwalton/flexbugs/issues/231
  '&:after': {
    content: "\"\"",
    minHeight: 'inherit',
    fontSize: 0
  }
});

var forms = /*#__PURE__*/Object.freeze({
  inputHeight: inputHeight,
  font: font,
  baseButton: baseButton
});

/* eslint-disable import/prefer-default-export */
var base = {
  '&': {
    paddingLeft: '3rem'
  },
  '& &': {
    marginTop: '1rem',
    marginBottom: '0.5rem'
  }
};
var nestedListSpacing = _extends_1({}, base, {
  '& :last-child &': {
    marginBottom: 0
  }
});

var list = /*#__PURE__*/Object.freeze({
  base: base,
  nestedListSpacing: nestedListSpacing
});

/* eslint-disable import/prefer-default-export */

var noStyle = _extends_1({}, noSpacing, {}, none, {}, font, {}, sharedTypography.color, {
  appearance: 'none',
  background: 'none',
  boxShadow: 'none',
  cursor: 'pointer'
});

var buttons = /*#__PURE__*/Object.freeze({
  noStyle: noStyle
});

exports.borders = borders;
exports.buttons = buttons;
exports.forms = forms;
exports.iconWrapper = iconWrapper;
exports.links = links;
exports.list = list;
exports.messaging = messaging;
exports.position = position;
exports.spacing = spacing;
