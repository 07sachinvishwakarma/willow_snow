import React, { forwardRef, useRef, useState, useEffect } from 'react';
import PropTypes from 'prop-types';
import styled, { ThemeProvider } from 'styled-components';
import { responsiveProps, componentWithName } from '@tds/util-prop-types';
import { handleResponsiveStyles, uniqueId, safeRest, getCopy, DependentIconSizeContext } from '@tds/util-helpers';
import { colorShark, colorTelusPurple, colorWhite, colorCardinal, colorAccessibleGreen, colorGreyShuttle, colorGreyGainsboro, colorTelusGreen, colorGreyShark } from '@tds/core-colours';
import { buttons } from '@tds/shared-styles';
import Text from '@tds/core-text';
import A11yContent from '@tds/core-a11y-content';

function createCommonjsModule(fn, module) {
	return module = { exports: {} }, fn(module, module.exports), module.exports;
}

var _extends_1 = createCommonjsModule(function (module) {
function _extends() {
  module.exports = _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

module.exports = _extends;
});

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

var defineProperty = _defineProperty;

var animations = {
  reduceMotion: {
    '@media (prefers-reduced-motion: reduce)': {
      transition: 'none'
    }
  },
  scale: {
    '&:hover svg': {
      transition: 'transform 150ms ease-in-out',
      transform: 'scale(1.1, 1.1)'
    },
    '&:active svg': {
      transition: 'transform 150ms ease-in-out',
      transform: 'scale(1, 1)'
    }
  }
};

var StyledInteractiveIconSVG = styled.svg.withConfig({
  displayName: "StyledInteractiveIconSVG",
  componentId: "ix2erv-0"
})(function (_ref) {
  var theme = _ref.theme;
  return {
    fill: theme.iconColor
  };
}, {
  width: '1.5rem',
  height: '1.5rem',
  zIndex: '2'
});

var iconSize = function iconSize(props) {
  return handleResponsiveStyles({
    size: props.size
  }, function (_ref) {
    var size = _ref.size;
    return {
      width: size === 20 ? '1.25rem' : '1.5rem',
      height: size === 20 ? '1.25rem' : '1.5rem'
    };
  });
};

var StyledLimitedInteractiveIconSVG = styled(StyledInteractiveIconSVG)(function (_ref2) {
  var animationDirection = _ref2.animationDirection;
  return defineProperty({
    transition: 'transform 150ms ease-in-out',
    '@media (prefers-reduced-motion: reduce)': {
      transition: 'none'
    }
  }, ":hover, :focus, :active", {
    transform: "translate".concat(animationDirection === 'up' || animationDirection === 'down' ? 'Y' : 'X', "(").concat(animationDirection === 'up' || animationDirection === 'left' ? '-' : '', "4px)")
  });
}, animations.reduceMotion, iconSize);

var getTheme = function getTheme(variant) {
  if (variant === 'basic') {
    return {
      backgroundColor: 'transparent',
      iconColor: colorShark
    };
  }

  if (variant === 'alternative') {
    return {
      backgroundColor: 'transparent',
      iconColor: colorTelusPurple
    };
  }

  if (variant === 'inverted') {
    return {
      backgroundColor: 'transparent',
      iconColor: colorWhite
    };
  }

  if (variant === 'error') {
    return {
      backgroundColor: 'transparent',
      iconColor: colorCardinal
    };
  }

  return {
    backgroundColor: 'transparent',
    iconColor: colorAccessibleGreen
  };
};
/**
 * @version ./package.json
 */


var Limited = function Limited(_ref4) {
  var variant = _ref4.variant,
      children = _ref4.children,
      size = _ref4.size;
  return React.createElement(ThemeProvider, {
    theme: getTheme(variant),
    size: size
  }, children);
};

Limited.displayName = 'Limited';
Limited.propTypes = {
  /**
   * The style.
   */
  variant: PropTypes.oneOf(['default', 'basic', 'alternative', 'inverted', 'error']),

  /**
   * The icon size in pixels as a [**responsive prop**](#responsiveProps).
   */
  size: responsiveProps(PropTypes.oneOf([16, 24])),

  /**
   * @ignore
   */
  children: PropTypes.node.isRequired
};
Limited.defaultProps = {
  variant: 'default',
  size: 24
};

var CaretUp = forwardRef(function (props, ref) {
  return React.createElement(Limited, _extends_1({}, props, {
    animationDirection: "up",
    ref: ref
  }), React.createElement(StyledLimitedInteractiveIconSVG, _extends_1({
    animationDirection: "up",
    viewBox: "0 0 24 24"
  }, props), React.createElement("path", {
    d: "M17.7940812,14.8167698 C17.4424627,15.1174894 17.0896181,14.9549557 16.8868854,14.7547243 L11.9968161,10.259447 L7.11722187,14.7547243 C6.93839231,14.9185479 6.49053328,15.1800328 6.16524043,14.8167698 C5.83994757,14.4535067 6.06520964,14.0838947 6.24327169,13.9200711 L11.6348225,8.12339734 C11.8136521,7.95886755 12.1060729,7.95886755 12.2849025,8.12339734 C12.2849025,8.12410347 17.7940809,13.920071 17.7940809,13.920071 C17.9792355,14.0649573 18.1456996,14.5160501 17.7940812,14.8167698 Z"
  })));
});
CaretUp.displayName = 'CaretUp';

var CaretDown = forwardRef(function (props, ref) {
  return React.createElement(Limited, _extends_1({}, props, {
    ref: ref
  }), React.createElement(StyledLimitedInteractiveIconSVG, _extends_1({
    animationDirection: "down",
    viewBox: "0 0 24 24"
  }, props), React.createElement("path", {
    d: "M17.7940812,9.18323023 C17.4424627,8.8825106 17.0896181,9.04504427 16.8868854,9.24527574 L11.9968161,13.740553 L7.11722187,9.24527573 C6.93839231,9.08145209 6.49053328,8.81996721 6.16524043,9.18323023 C5.83994757,9.54649326 6.06520964,9.91610528 6.24327169,10.0799289 L11.6348225,15.8766027 C11.8136521,16.0411324 12.1060729,16.0411324 12.2849025,15.8766027 C12.2849025,15.8758965 17.7940809,10.079929 17.7940809,10.079929 C17.9792355,9.93504267 18.1456996,9.48394985 17.7940812,9.18323023 Z"
  })));
});
CaretDown.displayName = 'CaretDown';

var ChevronLeft = forwardRef(function (props, ref) {
  return React.createElement(Limited, _extends_1({}, props, {
    ref: ref
  }), React.createElement(StyledLimitedInteractiveIconSVG, _extends_1({
    animationDirection: "left",
    viewBox: "0 0 24 24"
  }, props), React.createElement("path", {
    d: "M14.8167698,17.7940812 C14.5160501,18.1456996 14.0649573,17.9792355 13.920071,17.7940809 C13.920071,17.7940809 8.12410347,12.2849025 8.12339734,12.2849025 C7.95886755,12.1060729 7.95886755,11.8136521 8.12339734,11.6348225 L13.9200711,6.24327169 C14.0838947,6.06520964 14.4535067,5.83994757 14.8167698,6.16524043 C15.1800328,6.49053328 14.9185479,6.93839231 14.7547243,7.11722187 L10.259447,11.9968161 L14.7547243,16.8868854 C14.9549557,17.0896181 15.1174894,17.4424627 14.8167698,17.7940812 Z"
  })));
});
ChevronLeft.displayName = 'ChevronLeft';

var ChevronRight = forwardRef(function (props, ref) {
  return React.createElement(Limited, _extends_1({}, props, {
    ref: ref
  }), React.createElement(StyledLimitedInteractiveIconSVG, _extends_1({
    animationDirection: "right",
    viewBox: "0 0 24 24"
  }, props), React.createElement("path", {
    d: "M9.18323023,17.7940812 C8.8825106,17.4424627 9.04504427,17.0896181 9.24527574,16.8868854 L13.740553,11.9968161 L9.24527573,7.11722187 C9.08145209,6.93839231 8.81996721,6.49053328 9.18323023,6.16524043 C9.54649326,5.83994757 9.91610528,6.06520964 10.0799289,6.24327169 L15.8766027,11.6348225 C16.0411324,11.8136521 16.0411324,12.1060729 15.8766027,12.2849025 C15.8758965,12.2849025 10.079929,17.7940809 10.079929,17.7940809 C9.93504267,17.9792355 9.48394985,18.1456996 9.18323023,17.7940812 Z"
  })));
});
ChevronRight.displayName = 'ChevronRight';

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

var objectWithoutPropertiesLoose = _objectWithoutPropertiesLoose;

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};
  var target = objectWithoutPropertiesLoose(source, excluded);
  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

var objectWithoutProperties = _objectWithoutProperties;

var cartEmptyBoldCopyDictionary = {
  en: {
    a11yText: 'Cart'
  },
  fr: {
    a11yText: 'Panier'
  }
};
var cartFilledBoldCopyDictionary = {
  en: {
    a11yText: {
      single: '%{numItems} item in cart',
      multiple: '%{numItems} items in cart'
    }
  },
  fr: {
    a11yText: {
      single: '%{numItems} article dans le panier',
      multiple: '%{numItems} articles dans le panier'
    }
  }
};
var notifyBoldCopyDictionary = {
  en: {
    a11yText: 'Notifications'
  },
  fr: {
    a11yText: 'Avis'
  }
};
var profileBoldCopyDictionary = {
  en: {
    a11yText: 'Profile'
  },
  fr: {
    a11yText: 'Profil'
  }
};
var searchBoldCopyDictionary = {
  en: {
    a11yText: 'Search'
  },
  fr: {
    a11yText: 'Chercher'
  }
};
var settingsBoldCopyDictionary = {
  en: {
    a11yText: 'Settings'
  },
  fr: {
    a11yText: 'Param√®tres'
  }
};
var supportBoldCopyDictionary = {
  en: {
    a11yText: 'Support'
  },
  fr: {
    a11yText: 'Soutien'
  }
};
var userAddBoldCopyDictionary = {
  en: {
    a11yText: 'Add subscriber'
  },
  fr: {
    a11yText: 'Ajouter un utilisateur'
  }
};

var getOutline = function getOutline(_ref) {
  var variant = _ref.variant;

  if (variant !== 'inverted') {
    return {
      outline: 'none',
      '&:focus::-moz-focus-inner': {
        border: 0
      }
    };
  }

  return {
    '&:focus': {
      outline: 'transparent',
      border: "0.125rem solid ".concat(colorWhite),
      borderRadius: '50%'
    },
    '&:active': {
      borderRadius: '50%',
      backgroundColor: 'rgba(0,0,0,0.5)',
      backgroundBlendMode: 'multiply'
    }
  };
};

var StyledInteractiveIconButton = styled.button.withConfig({
  displayName: "StyledInteractiveIconButton",
  componentId: "sc-1phwvk2-0"
})(buttons.noStyle, getOutline, {
  width: '2.5rem',
  height: '2.5rem',
  display: 'inline-flex',
  justifyContent: 'center',
  alignItems: 'center',
  position: 'relative',
  '-webkit-tap-highlight-color': 'transparent'
});

var StyledInteractiveIconHover = styled.span.withConfig({
  displayName: "StyledInteractiveIconHover",
  componentId: "sc-1aj10i2-0"
})(function (_ref) {
  var theme = _ref.theme;
  return {
    backgroundColor: theme.hoverBackgroundColor
  };
}, animations.reduceMotion, defineProperty({
  position: 'absolute',
  top: 0,
  left: 0,
  width: '100%',
  height: '100%',
  borderRadius: '50%',
  transition: 'transform 200ms ease-in-out',
  transform: 'scale(0,0)'
}, "".concat(StyledInteractiveIconButton, ":focus &, ").concat(StyledInteractiveIconButton, ":active &"), {
  transform: 'scale(1,1)'
}));

function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}

var arrayWithHoles = _arrayWithHoles;

function _iterableToArrayLimit(arr, i) {
  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) {
    return;
  }

  var _arr = [];
  var _n = true;
  var _d = false;
  var _e = undefined;

  try {
    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);

      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }

  return _arr;
}

var iterableToArrayLimit = _iterableToArrayLimit;

function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance");
}

var nonIterableRest = _nonIterableRest;

function _slicedToArray(arr, i) {
  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();
}

var slicedToArray = _slicedToArray;

var _styled$div$withConfi;
var StyledTooltip = styled.div.withConfig({
  displayName: "Tooltip__StyledTooltip",
  componentId: "sc-13tnnkb-0"
})(animations.reduceMotion, (_styled$div$withConfi = {
  position: 'absolute',
  padding: '0.0625rem 0.5rem 0.1875rem 0.5rem',
  maxWidth: '8.25rem',
  backgroundColor: colorGreyShuttle,
  border: "1px solid ".concat(colorWhite),
  borderRadius: '0.25rem',
  zIndex: 4,
  marginTop: '0.25rem',
  visibility: 'hidden',
  opacity: 0,
  transition: 'opacity 200ms'
}, defineProperty(_styled$div$withConfi, "".concat(StyledInteractiveIconButton, ":hover + &,").concat(StyledInteractiveIconButton, ":focus + &"), {
  visibility: 'visible',
  opacity: 1
}), defineProperty(_styled$div$withConfi, "".concat(StyledInteractiveIconButton, ":focus + &"), {
  zIndex: 3 // lower the zIndex on the tooltip focused on to prevent it from being displayed on top of the tooltip being hovered over

}), _styled$div$withConfi), function (_ref) {
  var width = _ref.width;

  if (width) {
    return {
      marginLeft: "calc(".concat(width, "px / -2 + 1.25rem)")
    };
  }

  return {};
});

var Tooltip = function Tooltip(_ref2) {
  var children = _ref2.children,
      props = objectWithoutProperties(_ref2, ["children"]);

  var tooltipRef = useRef(null);

  var _useState = useState(0),
      _useState2 = slicedToArray(_useState, 2),
      width = _useState2[0],
      setWidth = _useState2[1];

  useEffect(function () {
    setWidth(tooltipRef.current.offsetWidth);
  }, []);
  return React.createElement(StyledTooltip, _extends_1({}, props, {
    role: "tooltip",
    ref: tooltipRef,
    width: width,
    "aria-hidden": "true"
  }), React.createElement(Text, {
    size: "small",
    invert: true
  }, children));
};

Tooltip.propTypes = {
  children: PropTypes.node.isRequired
};

var StyledInteractiveIconSVG$1 = styled(StyledInteractiveIconSVG)({
  transition: 'transform 150ms ease-in-out'
}, animations.reduceMotion);
var StyledInteractiveIconButton$1 = styled(StyledInteractiveIconButton)(animations.scale, animations.reduceMotion);
var StyledButtonAndTooltip = styled.div.withConfig({
  displayName: "NavButton__StyledButtonAndTooltip",
  componentId: "sc-5liebn-0"
})({
  display: 'inline-block'
});

var getTheme$1 = function getTheme(variant) {
  if (variant === 'inverted') {
    return {
      hoverBackgroundColor: 'transparent',
      iconColor: colorWhite
    };
  }

  return {
    hoverBackgroundColor: colorGreyGainsboro,
    iconColor: colorGreyShuttle
  };
};
/**
 * @version ./package.json
 */


var NavButton = forwardRef(function (_ref, ref) {
  var a11yText = _ref.a11yText,
      variant = _ref.variant,
      onClick = _ref.onClick,
      children = _ref.children,
      tag = _ref.tag,
      rest = objectWithoutProperties(_ref, ["a11yText", "variant", "onClick", "children", "tag"]);

  var ariaId = uniqueId(a11yText.replace(/\s+/g, '-').toLowerCase());
  return React.createElement(ThemeProvider, {
    theme: getTheme$1(variant)
  }, React.createElement(StyledButtonAndTooltip, null, React.createElement(StyledInteractiveIconButton$1, _extends_1({}, safeRest(rest), {
    "aria-labelledby": ariaId,
    variant: variant,
    onClick: onClick,
    as: tag,
    ref: ref
  }), React.createElement(StyledInteractiveIconHover, null), children), React.createElement(Tooltip, {
    id: ariaId
  }, a11yText)));
});
NavButton.displayName = 'NavButton';
NavButton.propTypes = {
  /**
   * Use the copy prop to either select provided English or French copy
   * by passing `'en'` or `'fr'` respectively.
   *
   * To provide your own, pass an object with the key `a11yText`.
   */
  copy: PropTypes.oneOfType([PropTypes.oneOf(['en', 'fr']), PropTypes.shape({
    a11yText: PropTypes.string.isRequired
  })]).isRequired,

  /**
   * @ignore
   * A description of the icon for screen readers, also appears as the hint when hovering over the icon.
   */
  a11yText: PropTypes.string,

  /**
   * The style.
   */
  variant: PropTypes.oneOf(['default', 'inverted']),

  /**
   * Pass a handler to the icon to make it interactive.
   */
  onClick: PropTypes.func,

  /**
   * The tag
   */
  tag: PropTypes.oneOf(['button', 'a']),

  /**
   * @ignore
   */
  children: PropTypes.node.isRequired
};
NavButton.defaultProps = {
  a11yText: undefined,
  variant: 'default',
  onClick: undefined,
  tag: 'button'
};

var CartEmptyBold = forwardRef(function (_ref, ref) {
  var copy = _ref.copy,
      props = objectWithoutProperties(_ref, ["copy"]);

  return React.createElement(NavButton, _extends_1({}, props, {
    ref: ref,
    a11yText: getCopy(cartEmptyBoldCopyDictionary, copy).a11yText,
    copy: copy // Passed in to satisfy styleguidist workaround

  }), React.createElement(StyledInteractiveIconSVG$1, {
    width: "24",
    height: "24",
    viewBox: "0 0 24 24",
    "aria-hidden": "true"
  }, React.createElement("path", {
    d: "M17.526 18c1.394 0 2.527 1.123 2.527 2.504 0 1.379-1.133 2.503-2.527 2.503-1.393 0-2.526-1.124-2.526-2.503C15 19.123 16.133 18 17.526 18zm0 1.539a.97.97 0 00-.974.965.97.97 0 00.974.964.97.97 0 00.975-.964.97.97 0 00-.975-.965zm-9 1.929a.97.97 0 01-.974-.964.97.97 0 01.974-.965.97.97 0 01.975.965.97.97 0 01-.975.964zm0-3.468c1.394 0 2.527 1.123 2.527 2.504 0 1.379-1.133 2.503-2.527 2.503C7.133 23.007 6 21.883 6 20.504 6 19.123 7.133 18 8.526 18zM2.025 2h2.627c.446 0 .838.284.975.691l.031.114.36 1.745h16.137c.297 0 .578.125.774.343.17.189.26.432.254.681l-.011.125-.781 5.466a1.878 1.878 0 01-1.496 1.553l-.158.025-12.596 1.553c.268.41.683.68 1.137.73l.152.008h10.975c.567 0 1.027.451 1.027 1.004 0 .517-.4.944-.915.998l-.112.006H9.43c-1.63 0-3.119-1.185-3.538-2.786l-.044-.187L3.812 4.008H2.025C1.46 4.008 1 3.558 1 3.004c0-.516.4-.943.914-.998L2.025 2h2.627-2.627zm18.948 4.559H6.429l1.145 5.712 12.804-1.507.595-4.205z",
    fillRule: "evenodd"
  })));
});
CartEmptyBold.propTypes = {
  copy: PropTypes.oneOfType([PropTypes.oneOf(['en', 'fr']), PropTypes.shape({
    a11yText: PropTypes.string.isRequired
  })]).isRequired
};
CartEmptyBold.displayName = 'CartEmptyBold';

var _typeof_1 = createCommonjsModule(function (module) {
function _typeof(obj) {
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    module.exports = _typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    module.exports = _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return _typeof(obj);
}

module.exports = _typeof;
});

var CartFilledBold = forwardRef(function (_ref, ref) {
  var copy = _ref.copy,
      variant = _ref.variant,
      numItems = _ref.numItems,
      props = objectWithoutProperties(_ref, ["copy", "variant", "numItems"]);

  var a11yText = getCopy(cartFilledBoldCopyDictionary, copy).a11yText;

  if (_typeof_1(a11yText) === 'object') {
    if (numItems > 1) {
      a11yText = a11yText.multiple;
    } else {
      a11yText = a11yText.single;
    }
  }

  return React.createElement(NavButton, _extends_1({}, props, {
    ref: ref,
    a11yText: a11yText.replace('%{numItems}', numItems),
    variant: variant,
    copy: copy // Passed in to satisfy styleguidist workaround

  }), React.createElement(StyledInteractiveIconSVG$1, {
    width: "24",
    height: "24",
    viewBox: "0 0 24 24",
    "aria-hidden": "true"
  }, React.createElement("g", {
    fillRule: "evenodd"
  }, React.createElement("path", {
    d: "M17.527 18c1.393 0 2.526 1.122 2.526 2.503 0 1.379-1.133 2.503-2.526 2.503-1.394 0-2.527-1.124-2.527-2.503C15 19.122 16.133 18 17.527 18zm0 1.539a.969.969 0 00-.974.964.97.97 0 00.974.965.97.97 0 00.974-.965.97.97 0 00-.974-.964zm-9 1.929a.97.97 0 01-.974-.965c0-.533.436-.964.974-.964a.97.97 0 01.974.964.97.97 0 01-.974.965zm0-3.468c1.394 0 2.527 1.122 2.527 2.503 0 1.379-1.133 2.503-2.527 2.503C7.133 23.006 6 21.882 6 20.503 6 19.122 7.133 18 8.527 18zM2.028 2h2.625c.446 0 .838.29.975.702l.031.116.333 1.726h10.141l.06.166c.156.438.392.84.72 1.224l.171.19.4.422H6.409l1.167 5.761 12.801-1.536.474-3.283.172-.036c.48-.099.938-.285 1.368-.558l.212-.143.477-.341-.688 4.765a1.899 1.899 0 01-1.494 1.579l-.157.026-12.634 1.518c.266.392.689.65 1.163.697l.16.008h10.976c.566 0 1.027.457 1.027 1.019 0 .525-.402.959-.915 1.014l-.112.006H9.43a3.657 3.657 0 01-3.537-2.723l-.043-.185L3.812 4.037H2.028A1.024 1.024 0 011 3.019c0-.525.402-.958.916-1.013L2.028 2h2.625-2.625z"
  }), React.createElement("path", {
    d: "M23.25 3.061c0 1.689-1.386 3.061-3.091 3.061-1.703 0-3.089-1.372-3.089-3.061C17.07 1.373 18.456 0 20.159 0c1.705 0 3.091 1.373 3.091 3.061z",
    fill: variant === 'inverted' ? colorTelusGreen : colorAccessibleGreen
  }))));
});
CartFilledBold.propTypes = {
  copy: PropTypes.oneOfType([PropTypes.oneOf(['en', 'fr']), PropTypes.shape({
    a11yText: PropTypes.string.isRequired
  })]).isRequired,
  variant: PropTypes.oneOf(['default', 'inverted']),
  numItems: PropTypes.number.isRequired
};
CartFilledBold.defaultProps = {
  variant: 'default'
};
CartFilledBold.displayName = 'CartFilledBold';

var NotifyBold = forwardRef(function (_ref, ref) {
  var copy = _ref.copy,
      props = objectWithoutProperties(_ref, ["copy"]);

  return React.createElement(NavButton, _extends_1({}, props, {
    ref: ref,
    a11yText: getCopy(notifyBoldCopyDictionary, copy).a11yText,
    copy: copy // Passed in to satisfy styleguidist workaround

  }), React.createElement(StyledInteractiveIconSVG$1, {
    width: "24",
    height: "24",
    viewBox: "0 0 24 24",
    "aria-hidden": "true"
  }, React.createElement("path", {
    d: "M12 0c1.322 0 2.41 1.008 2.494 2.276l.006.16v1.346c2.54.86 4.402 3.006 4.728 5.73l.036.699c.014.333.026.75.026 1.176l-.003.698c.002 1.206.085 2.45.824 3.831l.169.298 1.542 2.544c.228.373.237.844.02 1.228-.196.35-.55.58-.946.623l-.133.007h-5.865l.025.19c.008.079.012.134.012.181 0 1.661-1.323 3.013-2.95 3.013-1.627 0-2.95-1.352-2.95-3.013 0-.063.006-.142.02-.251l.016-.12H3.237c-.45 0-.863-.24-1.081-.63a1.22 1.22 0 01-.046-1.102l.069-.129 1.545-2.547c.937-1.57 1.027-2.962.993-4.352l-.014-.606c-.006-.859.062-1.666.065-1.704.318-2.658 2.067-4.76 4.48-5.674l.252-.09V2.436C9.5 1.093 10.622 0 12 0zm1.136 20.616h-2.302c-.003.042-.01.083-.01.126 0 .755.52 1.367 1.16 1.367.64 0 1.16-.612 1.16-1.367 0-.043-.005-.084-.008-.126zM12 5.372c-2.697 0-4.807 1.696-5.21 4.152l-.032.225s-.068.823-.053 1.62l.016.662c.018 1.447-.12 3.098-1.11 4.904l-.174.304-.835 1.377h14.795l-.831-1.37c-1.128-1.891-1.27-3.592-1.279-5.023l.003-1a30.047 30.047 0 00-.053-1.528c-.303-2.523-2.46-4.323-5.237-4.323zm0-3.46c-.38 0-.696.27-.746.622l-.006.097v.778a7.63 7.63 0 011.255-.02l.248.02v-.778c0-.397-.337-.719-.751-.719z",
    fillRule: "evenodd"
  })));
});
NotifyBold.propTypes = {
  copy: PropTypes.oneOfType([PropTypes.oneOf(['en', 'fr']), PropTypes.shape({
    a11yText: PropTypes.string.isRequired
  })]).isRequired
};
NotifyBold.displayName = 'NotifyBold';

var ProfileBold = forwardRef(function (_ref, ref) {
  var copy = _ref.copy,
      props = objectWithoutProperties(_ref, ["copy"]);

  return React.createElement(NavButton, _extends_1({}, props, {
    ref: ref,
    a11yText: getCopy(profileBoldCopyDictionary, copy).a11yText,
    copy: copy // Passed in to satisfy styleguidist workaround

  }), React.createElement(StyledInteractiveIconSVG$1, {
    width: "24",
    height: "24",
    viewBox: "0 0 24 24",
    "aria-hidden": "true"
  }, React.createElement("path", {
    d: "M11.999 1C18.065 1 23 5.934 23 11.999c0 6.066-4.935 11-11.001 11-6.065 0-10.999-4.934-10.999-11C1 5.934 5.934 1 11.999 1zm0 13.455c-2.747 0-5.096 1.99-5.648 4.628a9.024 9.024 0 0011.296 0c-.552-2.637-2.902-4.628-5.648-4.628zm0-11.524c-5 0-9.068 4.068-9.068 9.068 0 2.063.7 3.961 1.864 5.487 1.129-2.902 3.972-4.962 7.204-4.962 3.231 0 6.075 2.06 7.205 4.962a9.013 9.013 0 001.865-5.487c0-5-4.07-9.068-9.07-9.068zm0 1.248a3.866 3.866 0 013.862 3.862 3.866 3.866 0 01-3.862 3.861 3.866 3.866 0 01-3.861-3.861 3.866 3.866 0 013.861-3.862zm0 1.93c-1.065 0-1.93.867-1.93 1.932 0 1.064.865 1.93 1.93 1.93s1.931-.866 1.931-1.93c0-1.065-.866-1.931-1.93-1.931z",
    fillRule: "evenodd"
  })));
});
ProfileBold.propTypes = {
  copy: PropTypes.oneOfType([PropTypes.oneOf(['en', 'fr']), PropTypes.shape({
    a11yText: PropTypes.string.isRequired
  })]).isRequired
};
ProfileBold.displayName = 'ProfileBold';

var SearchBold = forwardRef(function (_ref, ref) {
  var copy = _ref.copy,
      props = objectWithoutProperties(_ref, ["copy"]);

  return React.createElement(NavButton, _extends_1({}, props, {
    ref: ref,
    a11yText: getCopy(searchBoldCopyDictionary, copy).a11yText,
    copy: copy // Passed in to satisfy styleguidist workaround

  }), React.createElement(StyledInteractiveIconSVG$1, {
    width: "24",
    height: "24",
    viewBox: "0 0 24 24",
    "aria-hidden": "true"
  }, React.createElement("path", {
    d: "M10.022 1l.253.003c4.994.13 8.935 4.278 8.806 9.267a8.985 8.985 0 01-1.728 5.087l-.189.249 5.604 5.897c.3.316.306.802.034 1.133l-.074.08-.03.028a.945.945 0 01-1.173.098l-.092-.072-6.081-5.418a9.01 9.01 0 01-5.543 1.719c-4.993-.13-8.935-4.278-8.806-9.267C1.13 4.898 5.144 1.008 10.023 1zm.02 1.81a7.214 7.214 0 100 14.43 7.214 7.214 0 000-14.43z"
  })));
});
SearchBold.propTypes = {
  copy: PropTypes.oneOfType([PropTypes.oneOf(['en', 'fr']), PropTypes.shape({
    a11yText: PropTypes.string.isRequired
  })]).isRequired
};
SearchBold.displayName = 'SearchBold';

var SettingsBold = forwardRef(function (_ref, ref) {
  var copy = _ref.copy,
      props = objectWithoutProperties(_ref, ["copy"]);

  return React.createElement(NavButton, _extends_1({}, props, {
    ref: ref,
    a11yText: getCopy(settingsBoldCopyDictionary, copy).a11yText,
    copy: copy // Passed in to satisfy styleguidist workaround

  }), React.createElement(StyledInteractiveIconSVG$1, {
    width: "24",
    height: "24",
    viewBox: "0 0 24 24",
    "aria-hidden": "true"
  }, React.createElement("path", {
    d: "M9.929 1h4.145c.678 0 1.26.458 1.401 1.086l.022.127.32 2.17c.265.126.527.269.783.426l.253.161 2.108-.824c.646-.232 1.354-.007 1.718.515l.069.108 2.06 3.479a1.393 1.393 0 01-.245 1.713l-.104.09-1.79 1.36a6.798 6.798 0 01.014.989l-.013.188 1.784 1.36c.516.4.684 1.079.428 1.663l-.062.124-2.084 3.514c-.311.559-1.002.827-1.64.652l-.126-.041-2.12-.83c-.258.17-.514.321-.774.457l-.26.13-.321 2.188c-.081.635-.624 1.13-1.287 1.189l-.135.006H9.928c-.679 0-1.26-.458-1.4-1.084l-.023-.127-.32-2.171a8.527 8.527 0 01-.784-.426l-.253-.162-2.11.825c-.658.232-1.351.013-1.716-.516l-.068-.11-2.061-3.476c-.326-.583-.218-1.278.245-1.712l.105-.09 1.79-1.364a6.502 6.502 0 01-.014-.97l.014-.205-1.784-1.36a1.383 1.383 0 01-.413-1.698l.062-.115 2.067-3.486c.313-.56 1.003-.832 1.64-.653l.127.042 2.12.83c.258-.17.514-.322.774-.458l.26-.13.322-2.19c.08-.634.622-1.129 1.287-1.188L9.929 1h4.145H9.93zm.4 1.803l-.39 2.334a.91.91 0 01-.558.695 6.98 6.98 0 00-1.551.878.94.94 0 01-.784.152l-.114-.037-2.203-.863-1.733 2.85 1.883 1.495c.247.19.38.505.34.817a7.023 7.023 0 00-.067.876c0 .253.022.533.066.88a.884.884 0 01-.257.741l-.09.078-1.904 1.451 1.696 2.86 2.277-.837a.98.98 0 01.898.125 6.763 6.763 0 001.54.87c.265.106.465.33.54.6l.023.102.337 2.29 3.394.037.39-2.332a.898.898 0 01.564-.697 7.088 7.088 0 001.546-.877.942.942 0 01.783-.151l.115.036 2.203.863 1.758-2.892-1.901-1.449a.889.889 0 01-.347-.822l.037-.321c.017-.172.029-.359.029-.555 0-.327-.033-.628-.066-.878a.891.891 0 01.257-.742l.089-.078 1.906-1.451-1.696-2.86-2.278.838a.932.932 0 01-.897-.125 6.754 6.754 0 00-1.54-.87.916.916 0 01-.542-.602l-.022-.102-.335-2.288-3.396-.039zM12 9.116a2.887 2.887 0 012.884 2.883A2.887 2.887 0 0112 14.883 2.886 2.886 0 019.117 12 2.886 2.886 0 0112 9.116zm4.583 2.883A4.588 4.588 0 0012 7.417a4.588 4.588 0 00-4.583 4.582A4.588 4.588 0 0012 16.582 4.588 4.588 0 0016.583 12z",
    fillRule: "evenodd"
  })));
});
SettingsBold.propTypes = {
  copy: PropTypes.oneOfType([PropTypes.oneOf(['en', 'fr']), PropTypes.shape({
    a11yText: PropTypes.string.isRequired
  })]).isRequired
};
SettingsBold.displayName = 'SettingsBold';

var SupportBold = forwardRef(function (_ref, ref) {
  var copy = _ref.copy,
      props = objectWithoutProperties(_ref, ["copy"]);

  return React.createElement(NavButton, _extends_1({}, props, {
    ref: ref,
    a11yText: getCopy(supportBoldCopyDictionary, copy).a11yText,
    copy: copy // Passed in to satisfy styleguidist workaround

  }), React.createElement(StyledInteractiveIconSVG$1, {
    width: "24",
    height: "24",
    viewBox: "0 0 24 24",
    "aria-hidden": "true"
  }, React.createElement("path", {
    d: "M12 1c6.065 0 11 4.934 11 11 0 6.065-4.935 11-11 11-6.066 0-11-4.935-11-11C1 5.934 5.934 1 12 1zm0 1.878c-5.03 0-9.122 4.093-9.122 9.122 0 5.03 4.093 9.122 9.122 9.122 5.03 0 9.122-4.092 9.122-9.122S17.029 2.878 12 2.878zm0 12.58a1.17 1.17 0 110 2.34 1.17 1.17 0 010-2.34zm-.045-9.005c.694 0 1.274.096 1.738.285.463.19.837.427 1.12.711.284.285.488.589.608.917.123.326.184.632.184.915 0 .47-.061.855-.184 1.158a2.81 2.81 0 01-.454.777 3.04 3.04 0 01-.6.55c-.22.151-.428.302-.624.454a2.928 2.928 0 00-.52.52 1.417 1.417 0 00-.256.562l-.03.17v.558h-1.978v-.66c.03-.42.11-.772.241-1.055.133-.283.287-.525.462-.725.177-.201.361-.374.557-.522.196-.145.377-.292.542-.438.166-.148.302-.308.404-.484.102-.175.148-.395.14-.66 0-.449-.11-.78-.33-.996-.22-.215-.526-.323-.917-.323-.263 0-.49.051-.681.155-.19.102-.347.239-.469.41-.123.17-.213.37-.271.6a2.803 2.803 0 00-.082.546l-.005.195H8.394c.01-.529.1-1.011.273-1.451.17-.44.41-.82.717-1.144a3.223 3.223 0 011.114-.753 3.753 3.753 0 011.457-.272z",
    fillRule: "evenodd"
  })));
});
SupportBold.propTypes = {
  copy: PropTypes.oneOfType([PropTypes.oneOf(['en', 'fr']), PropTypes.shape({
    a11yText: PropTypes.string.isRequired
  })]).isRequired
};
SupportBold.displayName = 'SupportBold';

var UserAddBold = forwardRef(function (_ref, ref) {
  var copy = _ref.copy,
      props = objectWithoutProperties(_ref, ["copy"]);

  return React.createElement(NavButton, _extends_1({}, props, {
    ref: ref,
    a11yText: getCopy(userAddBoldCopyDictionary, copy).a11yText,
    copy: copy // Passed in to satisfy styleguidist workaround

  }), React.createElement(StyledInteractiveIconSVG$1, {
    width: "24",
    height: "24",
    viewBox: "0 0 24 24",
    "aria-hidden": "true"
  }, React.createElement("path", {
    d: "M18.205 14C20.849 14 23 16.085 23 18.647c0 2.562-2.15 4.647-4.795 4.647-2.644 0-4.795-2.085-4.795-4.647 0-2.562 2.151-4.647 4.795-4.647zm0 1.72c-1.68 0-3.047 1.313-3.047 2.927s1.366 2.927 3.047 2.927c1.68 0 3.048-1.313 3.048-2.927s-1.368-2.927-3.048-2.927zm0 .782c.42 0 .768.311.82.713l.006.102v.515h.552a.82.82 0 01.825.815.819.819 0 01-.722.807l-.103.007h-.552v.516c0 .449-.371.814-.827.814a.823.823 0 01-.818-.712l-.007-.102v-.516h-.55a.821.821 0 01-.827-.814.82.82 0 01.723-.808l.103-.007h.551v-.515c0-.45.37-.815.825-.815zM10.038 1c1.072 0 1.609.231 2.13.662 1.73.012 2.636 1.561 2.69 4.605l.003.3c0 2.992 1.033 3.9 1.043 3.909.243.184.38.484.356.795a.925.925 0 01-.474.738l-.16.069c-.44.178-1.715.64-3.248.899a.965.965 0 01-.732-.16.89.89 0 01-.371-.594.966.966 0 01.751-1.074c.742-.1 1.331-.237 1.777-.368-.42-.787-.81-2.015-.851-3.879l-.004-.335c0-2.149-.444-2.981-.764-3.042l-.037-.004h-.352a.973.973 0 01-.665-.26l-.164-.15c-.242-.215-.374-.251-.928-.251-.255 0-.993.17-1.644.695-.838.678-1.263 1.691-1.263 3.012 0 2.054-.413 3.382-.858 4.216.44.129 1.019.263 1.734.356a.967.967 0 01.658.391.91.91 0 01.164.646l-.021.114-.302 1.132a.938.938 0 01-.588.638l-.112.034-2.898.682c-.765.181-1.387.661-1.722 1.296l-.078.162h2.053c.527 0 .957.418.957.931a.924.924 0 01-.833.924l-.111.006H1.956a.977.977 0 01-.663-.259.925.925 0 01-.293-.67c0-1.923 1.325-3.597 3.249-4.141l.208-.054 1.472-.348c-1.092-.296-1.644-.617-1.65-.62a.916.916 0 01-.168-1.476l.105-.087c.108-.11.94-1.032.997-3.593l.003-.28C5.216 2.4 8.53 1 10.04 1zm8.45 0c1.45 0 2.514.472 3.16 1.404.67.96.674 1.932.017 2.69l-.122.132-.1.097-.034.635a1.561 1.561 0 01.66 1.32l-.012.15-.175 1.325a1.587 1.587 0 01-.832 1.187 5.361 5.361 0 01-1.462 2.555.91.91 0 01-.711.32c-.204 0-.414-.061-.594-.193a.914.914 0 01-.371-.63.941.941 0 01.133-.615l.076-.105.054-.057c.607-.535 1.009-1.31 1.074-2.073a.929.929 0 01.653-.809l.11-.028.113-.852a.93.93 0 01-.659-.806l-.002-.127.086-1.657a.898.898 0 01.208-.533l.082-.087.35-.331c.05-.05.117-.119-.127-.47-.268-.387-.798-.584-1.574-.584-.655 0-1.352.06-1.999.493a.982.982 0 01-1.315-.218.906.906 0 01-.172-.698.933.933 0 01.402-.615C16.632 1 17.933 1 18.489 1z",
    fillRule: "evenodd"
  })));
});
UserAddBold.propTypes = {
  copy: PropTypes.oneOfType([PropTypes.oneOf(['en', 'fr']), PropTypes.shape({
    a11yText: PropTypes.string.isRequired
  })]).isRequired
};
UserAddBold.displayName = 'UserAddBold';

var positionStyles = function positionStyles(_ref) {
  var paragraphSize = _ref.paragraphSize;
  var top = 0;

  if (paragraphSize === 'large') {
    top = '-4px';
  }

  return {
    position: 'relative',
    top: top
  };
};

var StyledDependentSVG = styled.svg.attrs({
  'aria-hidden': true,
  focusable: false
})(positionStyles, function (_ref2) {
  var paragraphSize = _ref2.paragraphSize;
  return {
    width: paragraphSize === 'small' ? '1.25rem' : '1.5rem',
    height: paragraphSize === 'small' ? '1.25rem' : '1.5rem'
  };
}, function (_ref3) {
  var color = _ref3.color;
  var fill;

  if (color === 'greyShark') {
    fill = colorGreyShark;
  } else if (color === 'white') {
    fill = colorWhite;
  } else if (color === 'telusPurple') {
    fill = colorTelusPurple;
  } else if (color === 'accessibleGreen') {
    fill = colorAccessibleGreen;
  }

  return {
    fill: fill
  };
});

var Dependent = function Dependent(_ref4) {
  var children = _ref4.children,
      rest = objectWithoutProperties(_ref4, ["children"]);

  return React.createElement(DependentIconSizeContext.Consumer, null, function (_ref5) {
    var paragraphSize = _ref5.paragraphSize;
    return React.cloneElement(children, _extends_1({
      paragraphSize: paragraphSize,
      'data-testid': 'dependentSvg'
    }, rest));
  });
};

Dependent.propTypes = {
  /**
   * @ignore
   */
  children: PropTypes.node.isRequired,
  color: PropTypes.oneOf(['greyShark', 'white', 'telusPurple', 'accessibleGreen'])
};
Dependent.defaultProps = {
  color: 'greyShark'
};

var Delete = function Delete(props) {
  return React.createElement(Dependent, props, React.createElement(StyledDependentSVG, {
    width: "24",
    height: "24",
    viewBox: "0 0 24 24"
  }, React.createElement("path", {
    d: "M13.687 1c.97 0 1.852.46 2.346 1.213l.093.154.134.24h2.115c1.452 0 2.539 1.04 2.62 2.35l.005.158v.804c0 .462-.369.843-.84.895l-.11.006H20v13.463c0 1.983-1.427 3.609-3.376 3.712l-.197.005h-8.74c-1.983 0-3.58-1.562-3.682-3.52L4 20.283V6.82h-.053c-.485 0-.886-.348-.94-.796L3 5.919v-.804c0-1.33 1.135-2.421 2.565-2.503l.173-.005h2.115l.133-.24c.442-.79 1.29-1.3 2.247-1.36L10.425 1h3.262zM19 6.82v13.463l-.005.172c-.075 1.361-1.046 2.454-2.397 2.54l-.171.005h-8.74l-.171-.005a2.694 2.694 0 01-2.51-2.54L5 20.283V6.82h14zM13.687 2l.166.007c.549.044 1.034.309 1.32.72l.079.127.422.753h2.701l.157.006c.823.066 1.397.642 1.462 1.365l.006.137v.705H4v-.705l.006-.13c.072-.726.739-1.306 1.574-1.372l.158-.006h2.703l.419-.753.08-.128c.286-.41.77-.675 1.319-.72L10.425 2h3.262zM7.5 8.5a.5.5 0 01.492.41L8 9v12a.5.5 0 01-.992.09L7 21V9a.5.5 0 01.5-.5zm3 0a.5.5 0 01.492.41L11 9v12a.5.5 0 01-.992.09L10 21V9a.5.5 0 01.5-.5zm3 0a.5.5 0 01.492.41L14 9v12a.5.5 0 01-.992.09L13 21V9a.5.5 0 01.5-.5zm3 0a.5.5 0 01.492.41L17 9v12a.5.5 0 01-.992.09L16 21V9a.5.5 0 01.5-.5z",
    fillRule: "evenodd"
  })));
};

Delete.displayName = 'Dependent';

var Download = function Download(props) {
  return React.createElement(Dependent, props, React.createElement(StyledDependentSVG, {
    width: "24",
    height: "24",
    viewBox: "0 0 24 24"
  }, React.createElement("path", {
    d: "M22.5 18a.5.5 0 01.492.41l.008.09V23H1v-4.5a.5.5 0 01.992-.09L2 18.5V22h20v-3.5a.5.5 0 01.5-.5zM12.001 2c.253 0 .463.185.507.427l.008.093v15.718l5.604-5.604a.515.515 0 01.788.657l-.06.071-6.483 6.484a.51.51 0 01-.366.15.515.515 0 01-.3-.096l-.065-.054-6.483-6.484a.515.515 0 01.657-.788l.071.06 5.607 5.607V2.52c0-.285.23-.52.515-.52z",
    fillRule: "evenodd"
  })));
};

Download.displayName = 'Dependent';

var DownloadPDF = function DownloadPDF(props) {
  return React.createElement(Dependent, props, React.createElement(StyledDependentSVG, {
    width: "24",
    height: "24",
    viewBox: "0 0 24 24"
  }, React.createElement("path", {
    d: "M17 11c3.308 0 6 2.691 6 6 0 3.308-2.692 6-6 6s-6-2.692-6-6c0-3.309 2.692-6 6-6zm0 1c-2.757 0-5 2.242-5 5 0 2.757 2.243 5 5 5s5-2.243 5-5c0-2.758-2.243-5-5-5zM8.534.004L17.146 0c.435 0 .795.329.847.753L18 .86v8.67a.49.49 0 01-.487.491.488.488 0 01-.478-.403l-.008-.088V.982L8.869.986V5.07a.86.86 0 01-.746.854l-.106.007H3.939l.033 13.088h6.42a.49.49 0 01.486.49.49.49 0 01-.4.484l-.087.008H3.853a.857.857 0 01-.846-.753L3 19.14 3.001 5.59c0-.188.064-.374.177-.523l.073-.085L7.931.256a.848.848 0 01.491-.244l.112-.008zM17.001 14c.25 0 .457.157.5.365l.008.08v4.036l1.624-1.421a.561.561 0 01.718 0 .405.405 0 01.06.567l-.06.062-2.49 2.18a.531.531 0 01-.294.127L17 20l-.067-.004a.59.59 0 01-.128-.03c-.044-.016-.08-.043-.117-.07l-.048-.026-2.49-2.181a.406.406 0 010-.63.564.564 0 01.638-.056l.08.057 1.625 1.422v-4.037c0-.247.226-.445.508-.445zM8 2L5 5h3V2z",
    fillRule: "evenodd"
  })));
};

DownloadPDF.displayName = 'Dependent';

var DownloadPDFs = function DownloadPDFs(props) {
  return React.createElement(Dependent, props, React.createElement(StyledDependentSVG, {
    width: "24",
    height: "24",
    viewBox: "0 0 24 24"
  }, React.createElement("path", {
    d: "M17 11c3.308 0 6 2.691 6 6 0 3.308-2.692 6-6 6s-6-2.692-6-6c0-3.309 2.692-6 6-6zM1.495 7c.243 0 .445.175.486.406l.008.088v13.517h6.517a.494.494 0 01.089.981l-.09.008h-6.64a.867.867 0 01-.858-.758L1 21.134l.001-13.64c0-.272.221-.494.494-.494zM17 12c-2.757 0-5 2.242-5 5 0 2.757 2.243 5 5 5s5-2.243 5-5c0-2.758-2.243-5-5-5zm.146-12c.435 0 .795.329.847.753L18 .86v8.67a.49.49 0 01-.487.491.488.488 0 01-.478-.403l-.008-.088V.982L8.869.986V5.07a.86.86 0 01-.746.854l-.106.007H3.939l.033 13.088h6.42a.49.49 0 01.486.49.49.49 0 01-.4.484l-.087.008H3.853a.857.857 0 01-.846-.753L3 19.14 3.001 5.59c0-.188.064-.374.177-.523l.073-.085L7.931.256a.848.848 0 01.491-.244l.112-.008L17.146 0zm-.145 14c.25 0 .457.157.5.365l.008.08v4.036l1.624-1.421a.561.561 0 01.718 0 .405.405 0 01.06.567l-.06.062-2.49 2.18a.531.531 0 01-.294.127L17 20l-.067-.004a.59.59 0 01-.128-.03c-.044-.016-.08-.043-.117-.07l-.048-.026-2.49-2.181a.406.406 0 010-.63.564.564 0 01.638-.056l.08.057 1.625 1.422v-4.037c0-.247.226-.445.508-.445zM8 2L5 5h3V2z",
    fillRule: "evenodd"
  })));
};

DownloadPDFs.displayName = 'Dependent';

var Edit = function Edit(props) {
  return React.createElement(Dependent, props, React.createElement(StyledDependentSVG, {
    width: "24",
    height: "24",
    viewBox: "0 0 24 24"
  }, React.createElement("path", {
    d: "M19.717 2c.612 0 1.198.235 1.61.646a2.275 2.275 0 01.135 3.086l-.138.148L7.11 20.093a2.215 2.215 0 01-.227.205l-.03.015-4.114 1.648a.544.544 0 01-.581-.119.536.536 0 01-.146-.495l.027-.087 1.644-4.118a.519.519 0 01.07-.124l.05-.056L18.107 2.646A2.281 2.281 0 0119.718 2zm-15.1 15.715l-1.11 2.776 2.772-1.11-1.663-1.666zM16.114 6.167L5.358 16.931l1.68 1.682 1.335-1.37c1.2-1.216 3.012-3.027 5.672-5.67l3.753-3.721-1.683-1.685zm4.454-2.753a1.222 1.222 0 00-1.595-.096l-.103.091-1.993 1.995 1.686 1.689 2.002-1.982c.23-.224.355-.524.355-.844a1.19 1.19 0 00-.352-.853z",
    fillRule: "evenodd"
  })));
};

Edit.displayName = 'Dependent';

var LinkExternal = function LinkExternal(props) {
  return React.createElement(Dependent, props, React.createElement(StyledDependentSVG, {
    width: "24",
    height: "24",
    viewBox: "0 0 24 24"
  }, React.createElement("path", {
    d: "M4.302 5h5.883a.488.488 0 01.087.969l-.087.007H4.302a.325.325 0 00-.319.26l-.007.066v13.396c0 .158.112.289.26.319l.066.007h13.396a.325.325 0 00.319-.26l.007-.066V13.62a.488.488 0 01.968-.088l.008.088v6.078c0 .673-.513 1.228-1.169 1.295l-.133.007H4.302a1.304 1.304 0 01-1.295-1.169L3 19.698V6.302c0-.673.513-1.228 1.169-1.295L4.302 5h5.883-5.883zm8.458-2h7.733a.509.509 0 01.468.314l.003.019a.574.574 0 01.031.112l.005.06v7.736a.505.505 0 01-1 .091l-.009-.09V4.72L9.861 14.852a.503.503 0 01-.772-.643l.06-.07 10.127-10.13H12.76a.504.504 0 01-.091-1l.09-.009h7.734-7.733z",
    fillRule: "evenodd"
  })));
};

LinkExternal.displayName = 'Dependent';

var Print = function Print(props) {
  return React.createElement(Dependent, props, React.createElement(StyledDependentSVG, {
    width: "24",
    height: "24",
    viewBox: "0 0 24 24"
  }, React.createElement("path", {
    d: "M6.042 1h11.917c.225 0 .412.163.45.377l.008.082v6.875h1.375a3.211 3.211 0 013.203 3.026l.005.182v5.5c0 .713-.546 1.302-1.243 1.369l-.132.006h-3.208v4.125a.458.458 0 01-.376.45L17.96 23H6.042a.458.458 0 01-.45-.376l-.008-.082v-4.125H2.375a1.377 1.377 0 01-1.369-1.243L1 17.042v-5.5a3.212 3.212 0 013.027-3.203l.182-.005h1.375V1.459a.46.46 0 01.376-.452L6.042 1zM17.5 14.751h-11v7.333h11v-7.333zm-9.625 4.583h8.25a.46.46 0 01.082.91l-.082.007h-8.25a.459.459 0 01-.082-.91l.082-.007zM19.792 9.25H4.209a2.295 2.295 0 00-2.287 2.135l-.005.157v5.5c0 .225.162.412.376.45l.082.008h3.209v-3.208c0-.225.162-.412.376-.45l.082-.008h11.917c.225 0 .412.162.45.376l.008.082V17.5h3.208a.46.46 0 00.452-.376l.007-.082v-5.5a2.296 2.296 0 00-2.292-2.292zM7.875 16.584h8.25a.46.46 0 01.082.91l-.082.007h-8.25a.459.459 0 01-.082-.91l.082-.007h8.25-8.25zM17.5 1.917h-11v6.417h11V1.917z",
    fillRule: "evenodd"
  })));
};

Print.displayName = 'Dependent';

var Profile = function Profile(props) {
  return React.createElement(Dependent, props, React.createElement(StyledDependentSVG, {
    width: "24",
    height: "24",
    viewBox: "0 0 24 24"
  }, React.createElement("path", {
    d: "M12 1c6.066 0 11.001 4.934 11.001 11 0 6.065-4.935 11-11 11C5.935 23 1 18.065 1 12 1 5.933 5.935 1 12 1zm0 12.745c-3.309 0-6.135 2.541-6.515 5.813a9.938 9.938 0 0013.03 0c-.378-3.271-3.206-5.813-6.514-5.813zM12 2.01C6.493 2.01 2.01 6.49 2.01 12c0 2.577.99 4.923 2.598 6.697.752-3.408 3.83-5.961 7.393-5.961 3.561 0 6.64 2.553 7.391 5.961a9.938 9.938 0 002.6-6.698c0-5.508-4.482-9.99-9.991-9.99zm0 2.315a3.538 3.538 0 013.534 3.535A3.538 3.538 0 0112 11.394 3.538 3.538 0 018.466 7.86 3.538 3.538 0 0112 4.325zm0 1.01A2.527 2.527 0 009.476 7.86 2.527 2.527 0 0012 10.384a2.527 2.527 0 002.525-2.524A2.527 2.527 0 0012 5.335z",
    fillRule: "evenodd"
  })));
};

Profile.displayName = 'Dependent';

var Search = function Search(props) {
  return React.createElement(Dependent, props, React.createElement(StyledDependentSVG, {
    width: "24",
    height: "24",
    viewBox: "0 0 24 24"
  }, React.createElement("path", {
    d: "M10.5 2c4.687 0 8.5 3.813 8.5 8.5 0 2.175-.82 4.161-2.17 5.666l6.036 6.029a.477.477 0 010 .67.468.468 0 01-.666 0l-6.037-6.031A8.466 8.466 0 0110.5 19C5.813 19 2 15.187 2 10.5 2 5.813 5.813 2 10.5 2zm0 1C6.364 3 3 6.364 3 10.5S6.364 18 10.5 18c4.137 0 7.5-3.364 7.5-7.5S14.637 3 10.5 3z",
    fillRule: "evenodd"
  })));
};

Search.displayName = 'Dependent';

var Settings = function Settings(props) {
  return React.createElement(Dependent, props, React.createElement(StyledDependentSVG, {
    width: "24",
    height: "24",
    viewBox: "0 0 24 24"
  }, React.createElement("path", {
    d: "M14.068 23H9.934a.96.96 0 01-.952-.844l-.357-2.53a8.034 8.034 0 01-1.403-.832l-2.34.959a.966.966 0 01-1.192-.438L1.63 15.677c-.235-.44-.135-.966.233-1.263l1.984-1.584a8.833 8.833 0 01-.045-.83c0-.252.016-.52.047-.83L1.866 9.59a.997.997 0 01-.233-1.269l2.063-3.644a.946.946 0 011.184-.43l2.345.96a8.243 8.243 0 011.401-.832l.357-2.54A.96.96 0 019.935 1h4.134a.96.96 0 01.952.844l.356 2.531c.486.224.956.501 1.403.832l2.34-.958a.963.963 0 011.192.437l2.06 3.638c.236.44.135.966-.233 1.263l-1.984 1.583c.024.244.047.528.047.83 0 .302-.022.586-.047.83l1.982 1.582c.37.3.47.826.241 1.255l-2.072 3.657a.949.949 0 01-1.183.43l-2.346-.96c-.468.34-.93.614-1.401.832l-.356 2.539a.96.96 0 01-.952.835m-6.73-5.234c.095 0 .19.032.27.095a7.043 7.043 0 001.627.965.454.454 0 01.271.356l.39 2.77 4.15.048.449-2.819a.45.45 0 01.271-.356 7.344 7.344 0 001.63-.967.44.44 0 01.433-.059l2.545 1.045 2.118-3.652c.014-.026.01-.067-.013-.086l-2.156-1.724a.456.456 0 01-.166-.414c.033-.276.068-.607.068-.968 0-.36-.035-.692-.068-.968a.456.456 0 01.166-.414l2.159-1.725c.021-.017.024-.057.006-.093l-2.04-3.608-2.618 1.01a.434.434 0 01-.437-.061 7.014 7.014 0 00-1.627-.965.45.45 0 01-.271-.356l-.39-2.77L9.956 2l-.45 2.82a.453.453 0 01-.27.356 7.311 7.311 0 00-1.63.967.436.436 0 01-.433.06L4.626 5.156 2.508 8.809l2.169 1.809a.456.456 0 01.166.414 8.235 8.235 0 00-.068.968c0 .28.022.587.068.968a.456.456 0 01-.166.414l-2.159 1.725c-.02.017-.025.058-.006.094l2.04 3.608 2.619-1.01a.43.43 0 01.166-.033M12 17c-2.48 0-4.5-2.02-4.5-4.5S9.52 8 12 8c2.482 0 4.5 2.02 4.5 4.5S14.482 17 12 17m0-8c-1.93 0-3.5 1.57-3.5 3.5S10.07 16 12 16s3.5-1.57 3.5-3.5S13.93 9 12 9",
    fillRule: "evenodd"
  })));
};

Settings.displayName = 'Dependent';

var Add = function Add(props) {
  return React.createElement(Dependent, props, React.createElement(StyledDependentSVG, {
    width: "24",
    height: "24",
    viewBox: "0 0 24 24"
  }, React.createElement("path", {
    d: "M12 24C5.383 24 0 18.617 0 12S5.383 0 12 0s12 5.383 12 12-5.383 12-12 12zm0-22.957C5.958 1.043 1.043 5.958 1.043 12c0 6.042 4.915 10.957 10.957 10.957 6.042 0 10.957-4.915 10.957-10.957 0-6.042-4.915-10.957-10.957-10.957zm-.697 11.654l-5.7-.176A.632.632 0 0 1 5 11.892v.21c0-.332.27-.605.602-.605h5.697v-.1l.178-5.791a.64.64 0 0 1 .63-.606h-.209c.334 0 .605.267.605.602v5.895h5.895c.335 0 .602.27.602.605v-.21a.64.64 0 0 1-.606.63l-5.79.178-.101.001v5.697a.605.605 0 0 1-.605.602h.21a.632.632 0 0 1-.63-.603l-.175-5.7z",
    fillRule: "nonzero"
  })));
};

Add.displayName = 'Dependent';

var Close = function Close(props) {
  return React.createElement(Dependent, props, React.createElement(StyledDependentSVG, {
    width: "24",
    height: "24",
    viewBox: "0 0 24 24"
  }, React.createElement("path", {
    d: "M12 12.707l-4.147 4.146a.498.498 0 0 1-.707 0 .5.5 0 0 1 0-.707L11.293 12 7.146 7.853a.5.5 0 0 1 .707-.707L12 11.293l4.146-4.147a.5.5 0 0 1 .707.707L12.707 12l4.146 4.146a.5.5 0 0 1-.707.707L12 12.707zM12 24C5.383 24 0 18.617 0 12S5.383 0 12 0s12 5.383 12 12-5.383 12-12 12zm0-22.957C5.958 1.043 1.043 5.958 1.043 12c0 6.042 4.915 10.957 10.957 10.957 6.042 0 10.957-4.915 10.957-10.957 0-6.042-4.915-10.957-10.957-10.957z",
    fillRule: "nonzero"
  })));
};

Close.displayName = 'Dependent';

var PlayVideo = function PlayVideo(props) {
  return React.createElement(Dependent, props, React.createElement(StyledDependentSVG, {
    width: "24",
    height: "24",
    viewBox: "0 0 24 24"
  }, React.createElement("path", {
    d: "M12 24C5.383 24 0 18.617 0 12S5.383 0 12 0s12 5.383 12 12-5.383 12-12 12zm0-22.957C5.958 1.043 1.043 5.958 1.043 12c0 6.042 4.915 10.957 10.957 10.957 6.042 0 10.957-4.915 10.957-10.957 0-6.042-4.915-10.957-10.957-10.957zM9.4 17c-.08 0-.16 0-.16-.077-.16 0-.24-.155-.24-.31v-9.27c0-.154.08-.309.24-.309.16 0 .32-.077.4 0l7.2 4.636c.08.077.16.154.16.309 0 .154-.08.231-.16.309l-7.2 4.635C9.56 17 9.48 17 9.4 17zm.4-8.961v7.802l6.08-3.94L9.8 8.04z",
    fillRule: "evenodd"
  })));
};

PlayVideo.displayName = 'Dependent';

var Subtract = function Subtract(props) {
  return React.createElement(Dependent, props, React.createElement(StyledDependentSVG, {
    width: "24",
    height: "24",
    viewBox: "0 0 24 24"
  }, React.createElement("path", {
    d: "M12 24C5.383 24 0 18.617 0 12S5.383 0 12 0s12 5.383 12 12-5.383 12-12 12zm0-22.957C5.958 1.043 1.043 5.958 1.043 12c0 6.042 4.915 10.957 10.957 10.957 6.042 0 10.957-4.915 10.957-10.957 0-6.042-4.915-10.957-10.957-10.957zM12 11l6.303.162c.387.01.697.329.697.712v-.388a.737.737 0 0 1-.7.723s-3.96.178-6.3.178c-1.994 0-6.3-.18-6.3-.18a.726.726 0 0 1-.7-.721v.388c0-.378.312-.702.697-.712L12 11z",
    fillRule: "nonzero"
  })));
};

Subtract.displayName = 'Dependent';

var QuestionMarkCircle = function QuestionMarkCircle(props) {
  return React.createElement(Dependent, props, React.createElement(StyledDependentSVG, {
    width: "24",
    height: "24",
    viewBox: "0 0 24 24"
  }, React.createElement("path", {
    clipRule: "evenodd",
    fillRule: "evenodd",
    d: "M12 2C6.48 2 2 6.48 2 12C2 17.52 6.48 22 12 22C17.52 22 22 17.52 22 12C22 6.48 17.52 2 12 2V2ZM13.0001 19H11.0001V17H13.0001V19V19ZM14.1699 12.17C13.4499 12.9 12.9999 13.5 12.9999 15H10.9999V14.5C10.9999 13.4 11.4499 12.4 12.1699 11.67L13.4099 10.41C13.7799 10.05 13.9999 9.55001 13.9999 9.00001C13.9999 7.90001 13.0999 7.00001 11.9999 7.00001C10.8999 7.00001 9.99989 7.90001 9.99989 9.00001H7.99989C7.99989 6.79001 9.78989 5.00001 11.9999 5.00001C14.2099 5.00001 15.9999 6.79001 15.9999 9.00001C15.9999 9.88001 15.6399 10.68 15.0699 11.25L14.1699 12.17Z"
  })));
};

QuestionMarkCircle.displayName = 'Dependent';

/* eslint-disable import/prefer-default-export */
var warn = function warn(componentName, message) {
  if (process.env.NODE_ENV === 'production') {
    return;
  }

  console.warn("[TDS] ".concat(componentName, ": ").concat(message)); // eslint-disable-line no-console
};

var StyledIconButton = styled(StyledInteractiveIconButton)(animations.scale, {
  '&:hover > svg': animations.reduceMotion
});

var getTheme$2 = function getTheme(variant) {
  if (variant === 'alternative') {
    return {
      hoverBackgroundColor: '#D8CBE5'
    };
  }

  if (variant === 'inverted') {
    return {
      hoverBackgroundColor: 'transparent'
    };
  }

  return {
    hoverBackgroundColor: colorGreyGainsboro
  };
};
/**
 * @version ./package.json
 */


var IconButton = forwardRef(function (_ref, ref) {
  var a11yText = _ref.a11yText,
      variant = _ref.variant,
      onClick = _ref.onClick,
      tag = _ref.tag,
      Icon = _ref.icon,
      rest = objectWithoutProperties(_ref, ["a11yText", "variant", "onClick", "tag", "icon"]);

  var color;

  if (variant === 'alternative') {
    color = 'telusPurple';
  } else if (variant === 'inverted') {
    color = 'white';
  } else {
    color = 'greyShark';
  }

  if (Icon.name !== 'Add' && Icon.name !== 'Close' && Icon.name !== 'Subtract' && Icon.name !== 'PlayVideo') {
    warn('IconButton', 'IconButton is meant to be used with the Add, Close, Subtract, and PlayVideo icons for their universally-recognizable appearance. Other icons should be accompanied with text and not as a part of IconButton.');
  }

  return React.createElement(ThemeProvider, {
    theme: getTheme$2(variant)
  }, React.createElement(StyledIconButton, _extends_1({}, safeRest(rest), {
    variant: variant,
    onClick: onClick,
    as: tag,
    ref: ref
  }), React.createElement(A11yContent, null, a11yText), React.createElement(StyledInteractiveIconHover, null), React.createElement(Icon, {
    color: color
  })));
});
IconButton.displayName = 'IconButton';
IconButton.propTypes = {
  /**
   * A description of the icon for assistive technology.
   */
  a11yText: PropTypes.string.isRequired,

  /**
   * The visual style.
   */
  variant: PropTypes.oneOf(['default', 'alternative', 'inverted']),

  /**
   * Pass a handler to the icon to make it interactive.
   */
  onClick: PropTypes.func,

  /**
   * The tag
   */
  tag: PropTypes.oneOf(['button', 'a']),

  /**
   * The icon. Can be one of either the `Add`, `Close`, `PlayVideo`, or `Subtract` icons.
   */
  icon: PropTypes.oneOfType([componentWithName('Add'), componentWithName('Close'), componentWithName('PlayVideo'), componentWithName('Subtract')]).isRequired
};
IconButton.defaultProps = {
  variant: 'default',
  onClick: undefined,
  tag: 'button'
};

export { Add, CaretDown, CaretUp, CartEmptyBold, CartFilledBold, ChevronLeft, ChevronRight, Close, Delete, Download, DownloadPDF, DownloadPDFs, Edit, IconButton, LinkExternal, NotifyBold, PlayVideo, Print, Profile, ProfileBold, QuestionMarkCircle, Search, SearchBold, Settings, SettingsBold, Subtract, SupportBold, UserAddBold };
