import React, { forwardRef } from 'react';
import PropTypes from 'prop-types';
import styled from 'styled-components';
import { helveticaNeueLight45, helveticaNeueThin35, baseSupSubScripts, helveticaNeueMedium65, wordBreak } from '@tds/shared-typography';
import { colorWhite, colorSecondary, colorText } from '@tds/core-colours';
import { media } from '@tds/core-responsive';
import { safeRest } from '@tds/util-helpers';

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

var objectWithoutPropertiesLoose = _objectWithoutPropertiesLoose;

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};
  var target = objectWithoutPropertiesLoose(source, excluded);
  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

var objectWithoutProperties = _objectWithoutProperties;

function createCommonjsModule(fn, module) {
	return module = { exports: {} }, fn(module, module.exports), module.exports;
}

var _extends_1 = createCommonjsModule(function (module) {
function _extends() {
  module.exports = _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

module.exports = _extends;
});

var HeadingLevels = {
  h1: _extends_1({}, helveticaNeueLight45, {
    fontSize: '1.75rem',
    lineHeight: '1.29',
    // 36px
    letterSpacing: '-1.6px'
  }, media.from('md').css(_extends_1({}, helveticaNeueThin35, {
    fontSize: '2.75rem',
    lineHeight: '1.18',
    letterSpacing: '0'
  })), {
    sup: _extends_1({}, baseSupSubScripts, {
      fontSize: '1.25rem',
      top: '-1em'
    }, media.from('md').css({
      fontSize: '1.25rem',
      top: '-1.3em'
    }))
  }),
  h2: _extends_1({}, helveticaNeueLight45, {
    fontSize: '1.5rem',
    lineHeight: '1.33',
    // 30px
    letterSpacing: '-0.7px'
  }, media.from('md').css({
    fontSize: '1.75rem',
    lineHeight: '1.29',
    letterSpacing: '-0.8px'
  }), {
    sup: _extends_1({}, baseSupSubScripts, {
      fontSize: '1rem',
      top: '-0.8em'
    }, media.from('md').css({
      fontSize: '1rem',
      top: '-0.7em'
    }))
  }),
  h3: _extends_1({}, helveticaNeueMedium65, {
    fontSize: '1.25rem',
    lineHeight: '1.4',
    // 28px
    letterSpacing: '-0.6px',
    sup: _extends_1({}, baseSupSubScripts, {
      fontSize: '0.875rem',
      top: '-0.5em'
    })
  }),
  h4: _extends_1({}, helveticaNeueMedium65, {
    fontSize: '1rem',
    lineHeight: '1.25',
    // 20px
    letterSpacing: '-0.6px',
    sup: _extends_1({}, baseSupSubScripts, {
      fontSize: '0.875rem',
      top: '-0.5em'
    })
  })
};
var StyledHeading = styled.h1.withConfig({
  displayName: "Heading__StyledHeading",
  componentId: "mpz92r-0"
})(wordBreak, function (_ref) {
  var level = _ref.level,
      invert = _ref.invert;
  var baseColor = level === 'h1' || level === 'h2' ? colorSecondary : colorText;
  var color = invert ? colorWhite : baseColor;
  return _extends_1({
    color: color
  }, HeadingLevels["".concat(level)], {
    '& > span': {
      letterSpacing: 'inherit'
    }
  });
});
/**
 * Page headings. Renders an HTML `<h1-h4>` element.
 *
 * @version ./package.json
 */

var Heading = forwardRef(function (_ref2, ref) {
  var level = _ref2.level,
      _ref2$tag = _ref2.tag,
      tag = _ref2$tag === void 0 ? level : _ref2$tag,
      invert = _ref2.invert,
      children = _ref2.children,
      rest = objectWithoutProperties(_ref2, ["level", "tag", "invert", "children"]);

  return React.createElement(StyledHeading, _extends_1({}, safeRest(rest), {
    ref: ref,
    as: tag,
    level: level,
    invert: invert,
    "data-testid": "heading"
  }), children);
});
Heading.displayName = 'Heading';
Heading.propTypes = {
  /**
   * The visual level of the heading. If `tag` is not specified, then `level` determines what HTML element to render.
   */
  level: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4']).isRequired,

  /**
   * The semantic level of the heading. Renders the specified HTML element, otherwise it matches `level`.
   */
  tag: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'div', 'span']),

  /**
   * Invert the text color to appear light on dark backgrounds.
   */
  invert: PropTypes.bool,

  /**
   * The content. Can be text, other components, or HTML elements.
   */
  children: PropTypes.node.isRequired
};
Heading.defaultProps = {
  invert: false,
  tag: undefined
};

export default Heading;
export { StyledHeading };
