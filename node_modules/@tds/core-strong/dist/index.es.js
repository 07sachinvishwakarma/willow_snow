import React from 'react';
import PropTypes from 'prop-types';
import styled from 'styled-components';
import { boldFont, sup } from '@tds/shared-typography';
import { safeRest } from '@tds/util-helpers';

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

var objectWithoutPropertiesLoose = _objectWithoutPropertiesLoose;

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};
  var target = objectWithoutPropertiesLoose(source, excluded);
  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

var objectWithoutProperties = _objectWithoutProperties;

var StyledStrong = styled.strong.withConfig({
  displayName: "Strong__StyledStrong",
  componentId: "sc-19dhku5-0"
})(boldFont, {
  sup: sup
});
/**
 * Give portions of a sentence added importance.
 *
 * @version ./package.json
 */

var Strong = function Strong(_ref) {
  var children = _ref.children,
      rest = objectWithoutProperties(_ref, ["children"]);

  return React.createElement(StyledStrong, safeRest(rest), children);
};

Strong.propTypes = {
  /**
   * The text.
   */
  children: PropTypes.node.isRequired
};

export default Strong;
