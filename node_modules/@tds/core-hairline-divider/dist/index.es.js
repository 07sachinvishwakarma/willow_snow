import React from 'react';
import PropTypes from 'prop-types';
import styled from 'styled-components';
import { spacing, borders } from '@tds/shared-styles';
import { colorGreyGainsboro } from '@tds/core-colours';
import { safeRest } from '@tds/util-helpers';

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

var objectWithoutPropertiesLoose = _objectWithoutPropertiesLoose;

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};
  var target = objectWithoutPropertiesLoose(source, excluded);
  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

var objectWithoutProperties = _objectWithoutProperties;

function createCommonjsModule(fn, module) {
	return module = { exports: {} }, fn(module, module.exports), module.exports;
}

var _extends_1 = createCommonjsModule(function (module) {
function _extends() {
  module.exports = _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

module.exports = _extends;
});

var baseStyle = {
  transform: 'rotate(-0.00001deg)',
  flexShrink: 0
};

var horizontalStyle = _extends_1({}, baseStyle, {
  width: '100%',
  height: '1px'
});

var verticalStyle = _extends_1({}, baseStyle, {
  display: 'inline-block',
  width: '1px'
});

var StyledHairlineDivider = styled.hr.withConfig({
  displayName: "HairlineDivider__StyledHairlineDivider",
  componentId: "biamlk-0"
})(spacing.noSpacing, borders.none, function (props) {
  if (props.vertical && props.gradient) {
    return _extends_1({}, verticalStyle, {
      'background-image': "\n        linear-gradient(0deg, rgba(216, 216, 216, 0) 0%,\n        ".concat(colorGreyGainsboro, " 12%,\n        ").concat(colorGreyGainsboro, " 88%,\n        rgba(216, 216, 216, 0) 100%)\n      ")
    });
  }

  if (props.vertical && !props.gradient) {
    return _extends_1({}, verticalStyle, {
      'background-color': colorGreyGainsboro
    });
  }

  if (!props.vertical && props.gradient) {
    return _extends_1({}, horizontalStyle, {
      'background-image': "\n        linear-gradient(90deg, rgba(216, 216, 216, 0) 0%,\n        ".concat(colorGreyGainsboro, " 7%,\n        ").concat(colorGreyGainsboro, " 93%,\n        rgba(216, 216, 216, 0) 100%)\n      ")
    });
  }

  return _extends_1({}, horizontalStyle, {
    'background-color': colorGreyGainsboro
  });
});
/**
 * Separate content within modules.
 *
 * @version ./package.json
 */

var HairlineDivider = function HairlineDivider(_ref) {
  var vertical = _ref.vertical,
      gradient = _ref.gradient,
      rest = objectWithoutProperties(_ref, ["vertical", "gradient"]);

  return React.createElement(StyledHairlineDivider, _extends_1({}, safeRest(rest), {
    vertical: vertical,
    gradient: gradient
  }));
};

HairlineDivider.propTypes = {
  /**
   * Draw the divider vertically.
   */
  vertical: PropTypes.bool,

  /**
   * Use a subtle gradient instead of a solid thin line.
   */
  gradient: PropTypes.bool
};
HairlineDivider.defaultProps = {
  vertical: false,
  gradient: false
};

export default HairlineDivider;
