'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var React = _interopDefault(require('react'));
var PropTypes = require('prop-types');
var PropTypes__default = _interopDefault(PropTypes);
var styled = _interopDefault(require('styled-components'));
var utilHelpers = require('@tds/util-helpers');
var Paragraph = _interopDefault(require('@tds/core-paragraph'));
var coreColours = require('@tds/core-colours');

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

var objectWithoutPropertiesLoose = _objectWithoutPropertiesLoose;

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};
  var target = objectWithoutPropertiesLoose(source, excluded);
  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

var objectWithoutProperties = _objectWithoutProperties;

function _taggedTemplateLiteral(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }

  return Object.freeze(Object.defineProperties(strings, {
    raw: {
      value: Object.freeze(raw)
    }
  }));
}

var taggedTemplateLiteral = _taggedTemplateLiteral;

function createCommonjsModule(fn, module) {
	return module = { exports: {} }, fn(module, module.exports), module.exports;
}

var _typeof_1 = createCommonjsModule(function (module) {
function _typeof(obj) {
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    module.exports = _typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    module.exports = _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return _typeof(obj);
}

module.exports = _typeof;
});

var componentWithName = function componentWithName(passedName, checkDisplayName) {
  if (typeof passedName !== 'string') {
    throw new Error('passedName must be a string');
  }

  var checkProp = function checkProp(props, propName, componentName) {
    if (typeof props[propName] === 'undefined' || props[propName] === null) {
      return undefined;
    }

    if (Array.isArray(props[propName])) {
      // Iterates through every child and try to find the first element that does not match the passed name
      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean
      return props[propName].map(function (_, index) {
        return checkProp(props[propName], index, componentName);
      }).find(Boolean);
    }

    var testNameInObject = function testNameInObject() {
      return _typeof_1(props[propName]) === 'object' && (!checkDisplayName && props[propName].type.name !== passedName || checkDisplayName && props[propName].type.displayName !== passedName);
    };

    var testNameInFunction = function testNameInFunction() {
      return typeof props[propName] === 'function' && (!checkDisplayName && props[propName].name !== passedName || checkDisplayName && props[propName].displayName !== passedName);
    };

    if (props[propName] && _typeof_1(props[propName]) !== 'object' && typeof props[propName] !== 'function' || testNameInObject() || testNameInFunction()) {
      return new Error("".concat(componentName, ": Component passed to `").concat(propName, "` prop should be ").concat(passedName));
    }

    return undefined;
  };

  var checkRequired = function checkRequired(props, propName, componentName) {
    if (props[propName] === undefined) {
      return new Error("The prop `".concat(propName, "` is marked as required in `").concat(componentName, "`, but its value is ").concat(props[propName], "."));
    }

    return undefined;
  };

  var createValidate = function createValidate(isRequired) {
    if (isRequired) {
      return function (props, propName, componentName) {
        var checkForError = checkProp(props, propName, componentName);

        if (checkForError) {
          return checkForError;
        }

        return checkRequired(props, propName, componentName);
      };
    }

    return checkProp;
  };

  var validate = createValidate();
  validate.isRequired = createValidate(true);
  return validate;
};

function _templateObject() {
  var data = taggedTemplateLiteral(["\n  margin-left: ", ";\n  margin-right: ", ";\n  @media (max-width: 576px) {\n    margin-left: ", ";\n    margin-right: ", ";\n  }\n  width: ", ";\n  p {\n    position: relative;\n    text-align: ", ";\n    font-size: ", ";\n    line-height: ", ";\n    border-radius: ", ";\n    color: ", ";\n    background: #f2eff4;\n    padding-top: ", ";\n    padding-bottom: ", ";\n    padding-left: ", ";\n    padding-right: ", ";\n    @media (max-width: 576px) {\n      padding-left: ", ";\n      padding-right: ", ";\n    }\n    > i {\n      margin-right: 1rem;\n      position: absolute;\n      left: 10px;\n    }\n    > span {\n      display: inline-block;\n      margin-left: ", ";\n    }\n  }\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}
var marginValue = {
  mobile: {
    default: '-1.5rem',
    intermediate: '-1.5rem',
    narrow: '-1rem',
    compact: '-1rem'
  },
  desktop: {
    default: '-2rem',
    intermediate: '-2rem',
    narrow: '-1rem',
    compact: '-1rem'
  }
};
var paddingValue = {
  mobile: {
    default: '1.5rem',
    intermediate: '1.5rem',
    narrow: '1rem',
    compact: '1rem'
  },
  desktop: {
    default: '2rem',
    intermediate: '2rem',
    narrow: '1rem',
    compact: '1rem'
  }
};
var TextWrapper = styled.div(_templateObject(), function (props) {
  return props.roundedCorners ? 'auto' : marginValue.desktop[props.spacing];
}, function (props) {
  return props.roundedCorners ? 'auto' : marginValue.desktop[props.spacing];
}, function (props) {
  return props.roundedCorners ? 'auto' : marginValue.mobile[props.spacing];
}, function (props) {
  return props.roundedCorners ? 'auto' : marginValue.mobile[props.spacing];
}, function (props) {
  return props.roundedCorners ? '100%' : undefined;
}, function (props) {
  return props.textAlign;
}, function (props) {
  return props.compact ? '14px' : '1rem';
}, function (props) {
  return props.compact ? '20px' : undefined;
}, function (props) {
  return props.roundedCorners ? '5px' : undefined;
}, coreColours.colorTelusPurple, function (props) {
  return props.compact ? '2px' : '0.5rem';
}, function (props) {
  return props.compact ? '2px' : '0.5rem';
}, function (props) {
  return paddingValue.desktop[props.spacing];
}, function (props) {
  return paddingValue.desktop[props.spacing];
}, function (props) {
  return paddingValue.mobile[props.spacing];
}, function (props) {
  return paddingValue.mobile[props.spacing];
}, function (props) {
  return props.margin;
});

var iconMargin = function iconMargin(spacingLevel, hasIcon) {
  if (hasIcon) {
    if (spacingLevel === 'compact') {
      return '1.75rem';
    }

    return '0.75rem';
  }

  return undefined;
}; // Format text align to be backwards compatible.


var formatTextAlign = function formatTextAlign(textAlignProp, hasRoundedCorners) {
  if (textAlignProp) {
    return textAlignProp;
  } else if (hasRoundedCorners) {
    return 'center';
  }

  return 'left';
};
/**
 * @version ./package.json
 * @visibleName CalloutParagraph (beta)
 */


var CalloutParagraph = function CalloutParagraph(_ref) {
  var children = _ref.children,
      spacing = _ref.spacing,
      roundedCorners = _ref.roundedCorners,
      compact = _ref.compact,
      Icon = _ref.icon,
      textAlign = _ref.textAlign,
      rest = objectWithoutProperties(_ref, ["children", "spacing", "roundedCorners", "compact", "icon", "textAlign"]);

  return React.createElement(TextWrapper, {
    spacing: spacing,
    roundedCorners: roundedCorners,
    compact: compact,
    margin: iconMargin(spacing, Icon),
    textAlign: formatTextAlign(textAlign, roundedCorners)
  }, React.createElement(Paragraph, utilHelpers.safeRest(rest), Icon && React.createElement(Icon, null), React.createElement("span", null, children)));
};

CalloutParagraph.propTypes = {
  /**
   *
   */
  spacing: PropTypes__default.oneOf(['default', 'narrow', 'compact', 'intermediate']),

  /**
   * The content. Can be text, other components, or HTML elements.
   */
  children: PropTypes__default.node.isRequired,

  /**
   * Corners will be slightly rounded, and text will be center-aligned when passed.
   */
  roundedCorners: PropTypes__default.bool,

  /**
   * Font size and padding around text will be smaller.
   */
  compact: PropTypes__default.bool,

  /**
   * Provide an icon from the Dependent icon group in `@tds/core-interactive-icon`.
   */
  icon: componentWithName('Decorative', true),

  /**
   * Set explicit text-align property. If not set, default text-align is 'center' for
   * `roundedCorners` and 'left' otherwise.
   */
  textAlign: PropTypes__default.oneOf(['center', 'left', 'right'])
};
CalloutParagraph.defaultProps = {
  spacing: 'default',
  roundedCorners: false,
  compact: false,
  icon: undefined,
  textAlign: undefined
};

exports.default = CalloutParagraph;
