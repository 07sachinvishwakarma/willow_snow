function createCommonjsModule(fn, module) {
	return module = { exports: {} }, fn(module, module.exports), module.exports;
}

var _extends_1 = createCommonjsModule(function (module) {
function _extends() {
  module.exports = _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

module.exports = _extends;
});

// colours
var colorWhite = '#fff'; // grey

var colorGreyShark = '#2a2c2e';
var colorText = colorGreyShark; // tokens

var fontTelus = '"TELUS-Web", "Helvetica Neue", Helvetica, Arial, sans-serif';
var helveticaNeueThin35 = {
  fontWeight: 300
};
var helveticaNeueLight45 = {
  fontWeight: 400
};
var helveticaNeueRoman55 = {
  fontWeight: 500
};
var helveticaNeueMedium65 = {
  fontWeight: 700
};
var sizeSmall = {
  fontSize: '0.875rem',
  letterSpacing: -0.6,
  lineHeight: '1.42857'
};
var sizeMedium = {
  fontSize: '1rem',
  letterSpacing: -0.8,
  lineHeight: '1.5'
};
var sizeLarge = {
  fontSize: '1.25rem',
  letterSpacing: -1,
  lineHeight: '1.6'
};
var wordBreak = {
  wordWrap: 'break-word'
};
var baseSupSubScripts = {
  position: 'relative',
  verticalAlign: 'baseline',
  paddingLeft: '0.1em'
};
var sup = _extends_1({
  top: '-0.5em',
  fontSize: '0.875rem'
}, baseSupSubScripts);
var base = _extends_1({}, wordBreak, {
  fontSize: 'inherit'
});
var baseFont = {
  fontWeight: 'inherit'
};
var small = _extends_1({}, wordBreak, {}, sizeSmall);
var smallFont = _extends_1({}, helveticaNeueRoman55);
var medium = _extends_1({}, wordBreak, {}, sizeMedium);
var mediumFont = _extends_1({}, helveticaNeueLight45);
var large = _extends_1({}, wordBreak, {}, sizeLarge);
var largeFont = _extends_1({}, wordBreak, {}, helveticaNeueLight45);
var boldFont = _extends_1({}, wordBreak, {}, helveticaNeueMedium65);
var color = {
  color: colorText
};
var invertedColor = {
  color: colorWhite
};
var blockText = {
  display: 'block'
};

export { base, baseFont, baseSupSubScripts, blockText, boldFont, color, fontTelus, helveticaNeueLight45, helveticaNeueMedium65, helveticaNeueRoman55, helveticaNeueThin35, invertedColor, large, largeFont, medium, mediumFont, sizeLarge, sizeMedium, sizeSmall, small, smallFont, sup, wordBreak };
