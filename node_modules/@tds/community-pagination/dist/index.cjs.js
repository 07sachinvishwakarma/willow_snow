'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var React = require('react');
var React__default = _interopDefault(React);
var PropTypes = _interopDefault(require('prop-types'));
var DecorativeIcon = _interopDefault(require('@tds/core-decorative-icon'));
var A11yContent = _interopDefault(require('@tds/core-a11y-content'));
var utilHelpers = require('@tds/util-helpers');
var styled = _interopDefault(require('styled-components'));
var coreResponsive = require('@tds/core-responsive');
var coreColours = require('@tds/core-colours');
var stringHash = _interopDefault(require('string-hash'));

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

var objectWithoutPropertiesLoose = _objectWithoutPropertiesLoose;

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};
  var target = objectWithoutPropertiesLoose(source, excluded);
  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

var objectWithoutProperties = _objectWithoutProperties;

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

var classCallCheck = _classCallCheck;

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

var createClass = _createClass;

function createCommonjsModule(fn, module) {
	return module = { exports: {} }, fn(module, module.exports), module.exports;
}

var _typeof_1 = createCommonjsModule(function (module) {
function _typeof2(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof2(obj); }

function _typeof(obj) {
  if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
    module.exports = _typeof = function _typeof(obj) {
      return _typeof2(obj);
    };
  } else {
    module.exports = _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof2(obj);
    };
  }

  return _typeof(obj);
}

module.exports = _typeof;
});

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

var assertThisInitialized = _assertThisInitialized;

function _possibleConstructorReturn(self, call) {
  if (call && (_typeof_1(call) === "object" || typeof call === "function")) {
    return call;
  }

  return assertThisInitialized(self);
}

var possibleConstructorReturn = _possibleConstructorReturn;

var getPrototypeOf = createCommonjsModule(function (module) {
function _getPrototypeOf(o) {
  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

module.exports = _getPrototypeOf;
});

var setPrototypeOf = createCommonjsModule(function (module) {
function _setPrototypeOf(o, p) {
  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

module.exports = _setPrototypeOf;
});

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) setPrototypeOf(subClass, superClass);
}

var inherits = _inherits;

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

var defineProperty = _defineProperty;

/**
 * Page-able content panels for use with `Pagination`
 *
 * _This component can only be accessed as a name-spaced component: `Pagination.Panel` ._
 */

var Panel = function Panel(_ref) {
  var children = _ref.children,
      rest = objectWithoutProperties(_ref, ["children"]);

  return React__default.createElement("div", utilHelpers.safeRest(rest), children);
};

Panel.propTypes = {
  /**
   * The content. Can be text, any HTML element, or any component.
   */
  children: PropTypes.node.isRequired
};

var _extends_1 = createCommonjsModule(function (module) {
function _extends() {
  module.exports = _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

module.exports = _extends;
});

var PaginationContainer = styled.div({
  opacity: '1'
});
var Controls = styled.div(_extends_1({
  clear: 'both',
  display: 'flex',
  marginTop: '20px',
  position: 'relative',
  justifyContent: 'center'
}, coreResponsive.media.from('md').css({
  justifyContent: 'flex-start'
}), {
  width: '100%'
}));
var BasePaginationContainer = styled.p(_extends_1({
  color: coreColours.colorTelusPurple,
  fontSize: '1rem',
  lineHeight: '42px'
}, coreResponsive.media.from('md').css({
  lineHeight: '42px',
  padding: '0 8px 0 4px'
})));
var PrevPaginationContainer = styled(BasePaginationContainer)(function (props) {
  return {
    display: !props.showPrevious && 'none'
  };
});
var NextPaginationContainer = styled(BasePaginationContainer)(function (props) {
  return {
    display: !props.showNext && 'none'
  };
});
var PaginationButtonStyle = styled.button(_extends_1({
  color: coreColours.colorTelusPurple,
  backgroundColor: coreColours.colorWhiteLilac,
  border: 'none',
  width: '44px',
  height: '44px',
  margin: '0',
  textAlign: 'center',
  padding: '0',
  borderRadius: '4px'
}, coreResponsive.media.from('md').css({
  background: 'none',
  width: 'auto',
  height: 'auto'
})));
var ButtonLabel = styled.span(_extends_1({
  display: 'none'
}, coreResponsive.media.from('md').css({
  display: 'inline-block'
})));
var PaginationList = styled.ul(_extends_1({}, coreResponsive.media.until('md').css({
  display: 'none'
}), {
  display: 'flex'
}));
var PaginationListMobile = styled.ul(_extends_1({}, coreResponsive.media.from('md').css({
  display: 'none'
})));
var GeneralPaginationButton = styled.button({
  background: 'none',
  border: 'none',
  color: coreColours.colorTelusPurple,
  padding: '0 5px',
  minWidth: '32px',
  margin: '0',
  width: '100%',
  height: '100%'
});
var GeneralPagination = styled.li(_extends_1({
  display: 'inline-block',
  color: coreColours.colorTelusPurple,
  backgroundColor: coreColours.colorWhiteLilac,
  height: '44px',
  lineHeight: '41px',
  width: '44px',
  minWidth: '32px',
  '&:hover': {
    border: "1px solid ".concat(coreColours.colorTelusPurple)
  },
  listStyle: 'none',
  marginRight: '0.5rem',
  textAlign: 'center',
  borderRadius: '4px',
  '&:first-child': {
    marginLeft: '0.5rem'
  }
}, coreResponsive.media.from('md').css({
  display: 'inline-block',
  lineHeight: '44px',
  border: "1px solid ".concat(coreColours.colorWhiteLilac),
  minWidth: '22px'
})));
var PaginationEllipsis = styled(GeneralPagination)(_extends_1({
  display: 'inline-block',
  width: '16px',
  height: '32px',
  minWidth: '16px',
  backgroundColor: 'inherit',
  lineHeight: '28px',
  marginRight: '0.25rem',
  marginLeft: '-0.25rem',
  border: 'none'
}, coreResponsive.media.from('md').css({
  border: 'none',
  '&:hover': {
    border: 'none'
  }
})));
var PaginationCurrent = styled(GeneralPagination)(_extends_1({
  color: coreColours.colorWhiteLilac,
  lineHeight: '46px',
  verticalAlign: 'bottom',
  padding: '0 5px',
  border: 'none',
  '&:hover': {
    border: 'none'
  },
  backgroundColor: coreColours.colorTelusPurple
}, coreResponsive.media.from('md').css({
  border: "1px solid ".concat(coreColours.colorTelusPurple),
  minWidth: '24px'
})));
var PanelContainer = styled.div({
  display: 'flex',
  justifyContent: 'center'
});

var JSONSafeStringify = function JSONSafeStringify(input) {
  var cache = [];
  var result = JSON.stringify(input, function (key, value) {
    if (_typeof_1(value) !== 'object' || value === null) {
      return value;
    }

    if (cache.includes(value)) {
      // Circular reference found, discard key
      return undefined;
    } // Store value in our collection


    cache.push(value);
    return value;
  });
  cache = null; // Enable garbage collection

  return result;
};

var hash = function hash(obj) {
  if (!obj) return 0;
  return typeof obj !== 'string' ? stringHash(JSONSafeStringify(obj)) : stringHash(obj);
};

var copyDictionary = {
  en: {
    goToText: 'Go to panel number',
    currentText: '(current)',
    previousLabel: 'Go to previous panel',
    previousText: 'Previous',
    nextLabel: 'Go to next panel',
    nextText: 'Next'
  },
  fr: {
    goToText: 'Aller au panneau n°',
    currentText: '(page actuelle)',
    previousLabel: 'Aller au panneau précédent',
    previousText: 'Précédent',
    nextLabel: 'Aller au prochain panneau',
    nextText: 'Suivant'
  }
};

/**
 * @version ./package.json
 */

var Pagination =
/*#__PURE__*/
function (_Component) {
  inherits(Pagination, _Component);

  function Pagination(props) {
    var _this;

    classCallCheck(this, Pagination);

    _this = possibleConstructorReturn(this, getPrototypeOf(Pagination).call(this, props));

    defineProperty(assertThisInitialized(_this), "checkForRegularTabs", function (index, isMobile) {
      var _this$state = _this.state,
          current = _this$state.current,
          panels = _this$state.panels; // Check if there are less than 7 panels,
      // if the index is at the first panel
      // if the index is next to the first panel
      // if current is less than three and index is less than five
      // and the inverse if current within two of total and index is greater than minus 4 of total

      if (isMobile) {
        return panels < 5 || index === 1 || index === panels || current < 2 && index < 3 || current > panels - 1 && index > panels - 2;
      }

      return panels < 7 || index === 1 || index === panels || index === current + 1 || index === current - 1 || current < 3 && index < 5 || current > panels - 2 && index > panels - 4;
    });

    defineProperty(assertThisInitialized(_this), "checkForEllipsis", function (index, isMobile) {
      var _this$state2 = _this.state,
          current = _this$state2.current,
          panels = _this$state2.panels; // Check if we should render an ellipsis
      // if index is less than two or greater than two of current
      // if current is less than three and index is five
      // and the inverse if current is within two of total and index is total minus 5

      if (isMobile) {
        return index === current - 1 || index === current + 1 || current < 2 && index === 2 || current > panels - 1 && index === panels - 5 || current === 1 && index === 3 && panels > 3;
      }

      return index === current - 2 || index === current + 2 || current < 3 && index === 5 || current > panels - 2 && index === panels - 5;
    });

    defineProperty(assertThisInitialized(_this), "mapTabs", function (isMobile) {
      var copy = _this.props.copy;
      var current = _this.state.current; // new set of rules, under mobile view , right before Tablet,
      // only show first, current, last, else, in between show ellipsis, only apply these rules under mobile view

      current = parseInt(current, 10) || 0;
      return _this.props.children.map(function (item, i) {
        var index = i + 1;

        if (current === index) {
          return React__default.createElement(PaginationCurrent, {
            key: hash("".concat(i, "-1"))
          }, index, React__default.createElement(A11yContent, null, utilHelpers.getCopy(copyDictionary, copy).currentText));
        }

        if (_this.checkForRegularTabs(index, isMobile)) {
          return React__default.createElement(GeneralPagination, {
            key: hash("".concat(i, "-3"))
          }, React__default.createElement(GeneralPaginationButton, {
            value: index,
            onClick: function onClick(e) {
              return _this.handleClick(e);
            },
            "aria-label": "".concat(utilHelpers.getCopy(copyDictionary, copy).goToText, " ").concat(index)
          }, index));
        }

        if (_this.checkForEllipsis(index, isMobile)) {
          return React__default.createElement(PaginationEllipsis, {
            key: hash("".concat(i, "-4"))
          }, "...");
        }

        return null;
      });
    });

    defineProperty(assertThisInitialized(_this), "handleClick", function (e) {
      e.preventDefault();
      var value = parseInt(e.currentTarget.value, 10) || 0;

      if (value > _this.state.panels || value < 1) {
        return null;
      }

      return _this.setState({
        current: value
      }, _this.handleButtonState);
    });

    defineProperty(assertThisInitialized(_this), "handleButtonState", function () {
      _this.setState({
        showPrevious: _this.state.current !== 1,
        showNext: _this.state.current !== _this.state.panels
      });
    });

    _this.state = {
      current: 1,
      panels: _this.props.children.length,
      showPrevious: false,
      showNext: true
    };
    return _this;
  }

  createClass(Pagination, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.handleButtonState();
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props = this.props,
          children = _this$props.children,
          copy = _this$props.copy,
          rest = objectWithoutProperties(_this$props, ["children", "copy"]);

      if (!Array.isArray(children) || children.length <= 1) {
        // Pagination should not display the Controls when there is only one panel
        return React__default.createElement(Panel, rest, children);
      }

      var current = this.state.current;
      var increaseNumber = parseInt(current + 1, 10);
      var decreaseNumber = parseInt(current - 1, 10);
      var previousText = copy !== 'fr' ? 'Prev' : 'Précédent';
      var nextText = copy !== 'fr' ? 'Next' : 'Suivant';
      var previousLabel = copy !== 'fr' ? 'Go to previous panel' : 'Aller au panneau précédent';
      var NextLabel = copy !== 'fr' ? 'Go to next panel' : 'Aller au prochain panneau';
      return React__default.createElement(PaginationContainer, utilHelpers.safeRest(rest), React__default.createElement(Panel, rest, children[current - 1]), React__default.createElement(Controls, null, React__default.createElement(PrevPaginationContainer, {
        showPrevious: this.state.showPrevious
      }, React__default.createElement(PaginationButtonStyle, {
        value: decreaseNumber,
        onClick: function onClick(e) {
          return _this2.handleClick(e);
        },
        "aria-label": previousLabel
      }, React__default.createElement(DecorativeIcon, {
        symbol: "leftChevron",
        size: 16
      }), ' ', React__default.createElement(ButtonLabel, null, previousText))), React__default.createElement(PaginationList, null, this.mapTabs(false)), React__default.createElement(PaginationListMobile, null, this.mapTabs(true)), React__default.createElement(NextPaginationContainer, {
        showNext: this.state.showNext
      }, React__default.createElement(PaginationButtonStyle, {
        value: increaseNumber,
        onClick: function onClick(e) {
          return _this2.handleClick(e);
        },
        "aria-label": NextLabel
      }, React__default.createElement(ButtonLabel, null, nextText), " ", React__default.createElement(DecorativeIcon, {
        symbol: "chevron",
        size: 16
      })))));
    }
  }]);

  return Pagination;
}(React.Component);

Pagination.propTypes = {
  /**
   * The pagination panels. Must be at least one `<Pagination.Panel />`.
   */
  children: PropTypes.node.isRequired,

  /**
   * The default copy to be used.
   */
  copy: PropTypes.oneOf(['en', 'fr']).isRequired
};
Pagination.Panel = Panel;

exports.default = Pagination;
